{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue","webpack:///./src/Header.vue","webpack:///src/Header.vue","webpack:///./src/Header.vue?e670","webpack:///./src/Header.vue?7f1b","webpack:///src/App.vue","webpack:///./src/App.vue?03b3","webpack:///./src/App.vue?315a","webpack:///./src/main.js","webpack:///./src/Header.vue?8353","webpack:///./src/App.vue?d1b8"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","render","_vm","this","_c","_self","mainLoading","attrs","staticClass","_m","_v","staticStyle","on","connectMetamask","_s","zkBTC_CONTRACT_ADDRESS2","URL_zkBTC_CONTRACT_ADDRESS2","AUCTION_CONTRACT_ADDRESS2","URL_AUCTION_CONTRACT_ADDRESS2","ZeroxBitcoin_addresss2","URL_0xBTC_CONTRACT_ADDRESS2","LP_CONTRACT_ADDRESS2","URL_LP_CONTRACT_ADDRESS2","Staking_zkBTC_CONTRACT_ADDRESS2","URL_Staking_zkBTC_CONTRACT_ADDRESS2","LP_SECOND_CONTRACT_ADDRESS2","URL_LP_SECOND_CONTRACT_ADDRESS2","LP_SECOND_STAKING_CONTRACT_ADDRESS2","URL_Staking_SECOUND_zkBTC_CONTRACT_ADDRESS2","selectedToken","userAccountsss","currentBalance","symbol","_e","greeting","parseInt","ReservesTotal","greetingStakeBalance","MaxsliderValue2","greetingLPTotal","ReservesTotal2","parseFloat","toFixed","replace","directives","rawName","sliderValue2","expression","domProps","$event","target","txStatus","GetPermitAndStake","shouldDisplayButton1","ApproveLPtoStake","AddPortionToStake","greetingStakeBalanceTotal","StakeReward","StakeReward2","StakeReward3","GetStakingRewardsOnly","retreivingFee","MaxsliderValue","sliderValue","RemovePortionOfStake","ExitOnly","ethereumAddress","style","width","textBoxWidth","composing","GetPermitAndStakeAdvanced","ApproveLPtoStakeAlert","AddPortionToStakeAdvanced","ethereumAddress2","GetStakingRewardsOnlyAdvanced","GetFreeLPTokens2","StakingNewPeriod","CurrentTimestamp","initilizeNewStakingPeriod","initilizeABAS","initilizeAuction","ApprovedLPforContract","staticRenderFns","component","GREETER_CONTRACT_ABI","require","ABAS_CONTRACT_ABI","AUCTION_CONTRACT_ABI","LP_CONTRACT_ABI","allowedTokens","Staking_AbAS_CONTRACT_ABI","ZeroxBitcoin__CONTRACT_ABI","GREETER_CONTRACT_ADDRESS","LP_CONTRACT_ADDRESS","Staking_zkBTC_CONTRACT_ADDRESS","zkBTC_CONTRACT_ADDRESS","ZeroxBitcoin_addresss","AUCTION_CONTRACT_ADDRESS","LP_SECOND_CONTRACT_ADDRESS","LP_SECOND_STAKING_CONTRACT_ADDRESS","PERMIT_ADDRESS","PERMIT_CONTRACT_ABI","console","log","URL_Staking_zkBTC_0xBTC_CONTRACT_ADDRESS2","GREETER_CONTRACT_ADDRESS2","StartingDay","era","amountOfDays","Permit_nonce","Permit_r","Permit_s","Permit_v","name2","number2","CLAIM_AMOUNT","maxQuantity","message","newGreeting","AuctionLengthInHours","startEthToSend","StepEthToSend","tokens","showButton","selectedTokenAddress","sliderStep","sliderStep2","provider","signer","contract","canSubmit","runningNow","runningNowAlertOnce","retreivingBalance","currentFee","created","changeTokenETH","components","Header","computed","adjustedDays","totalDays","adjustedDays2","headerText","startingDay","endDay","watch","newValue","message21","mounted","interval","setTimeout","ethereum","networkVersion","loadMainScreen","loopId","setInterval","ONEloadMainScreen22","methods","SetMessage","adjustDays","adjustDays2","currentEra","greetingAuctionNumber","debouncedAdjustDays","clearTimeout","debounceTimeout","initializeProviderAndSigner","Provider","Web3Provider","getSigner","Contract","contract2","contractABAS","contract0xBitcoinToken","contractPermit","contractABASStaking","contractLPToken","greet","userAddy","getAddress","allowance","balanceOf","earned","earned2","earned3","Finish","periodFinish","curEra","Withdrawl_ARRAY_WithCustomAmount","totalSupply","getReserves222","getReserves","secondsPerDay","currentDay","Check_Withdraw_Amt","day","mapEraDay_MemberUnits","sec","time","nextDayTime","toString","now","Date","currentTime","remainTime","percentageDay","mapEraDay_Units","getMiningDifficulty","feeInGas","estimateGas","setGreeting","gasPriceInUnits","getGasPrice","feeInGas2","burn0xForMember","ethers","utils","formatUnits","mul","decimals","balanceInUnits","getBalance","l2Address","address","ret","l1Address","txHandle","getOverrides","wait","getGreeting","getGreetingStakeBalance","getGreetingStakeBalanceTotal","LPBalance","getLPBalance","getStakeReward","getStakeReward2","getStakeReward3","getApprovedLPforContract","e","alert","JSON","stringify","withdrawToken","GetPermitData","Permit_user","Permit_spender","Permit_value","amountToStake","bigNumber","BigNumber","from","parseUnits","MAXstakeForPermit","Permit_deadline","txHandle2","stakeForPermit","currentAuctionTotal","getAuctionTotal","UserTotal","getUserTotal","NextDayTime","getNextDayTime","getAuctionTotalZKBTC","MAXstakePermit","stakePermit","permit","userAddy2","spender","test","toLocaleString","currentTimeSeconds","Math","floor","deadline","nonce","nonces","namez","owner","Permit","type","domainName","domainVersion","chainId","contractAddressAA","domainType","domain","version","verifyingContract","dataToSign","types","EIP712Domain","primaryType","signature","request","method","params","sig","pureSig","substring","v","zSetUP1","setRewardParamsALL","getStakeNextRewardTime","web3","Web3","amount","amountInWei","toWei","GreetingAuctionNumber","getGreetingAuctionNumber","GreetingDaysToWithdrawArray","getGreetingDaysToWithdrawArray","FutureBurn0xEasier","userAccountsssOLD","getReservesTotal","StartingEra","checkitzl","erazzz","WithdrawlsDays","getReward","getRewardFor","approve","MAXstakeFor","stakeFor","MAXstake","stake","withdraw","exit","zinit2","updateFee","getFee","then","fee","catch","finally","updateBalance","balance","changeToken","l1Token","filter","l2TokenAddress","getDifficulty","difficulty","mainLoading2","getGreetingAuctionLength","getGreetingAuctionERA","UpdateContracts","getGreetingLPTotal","Vue","config","productionTip","h","App","$mount"],"mappings":"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","file":"js/app.a7cea6cc.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function render(){var _vm=this,_c=_vm._self._c;return (!_vm.mainLoading)?_c('div',{attrs:{\"id\":\"app\"}},[_c('Header'),_vm._m(0),_vm._m(1),_c('h1',[_c('a',{attrs:{\"href\":_vm.URL_LP_CONTRACT_ADDRESS2}},[_vm._v(\"Get ETH/zkBTC LP Tokens by depositing to the LP Click here\")])]),(_vm.selectedToken)?_c('div',{staticClass:\"balance\"},[_c('p',[_vm._v(\" Your zkSync Era Account: \"),_c('a',{attrs:{\"href\":'https://goerli.explorer.zksync.io/address/' + _vm.userAccountsss}},[_vm._v(\" \"+_vm._s(_vm.userAccountsss)+\" \")])]),_c('p',[_vm._v(\" Your zkSync Era ETH: \"),_c('span',[_vm._v(_vm._s(_vm.currentBalance)+\" \"),_c('img',{staticStyle:{\"width\":\"25px\",\"height\":\"25px\"},attrs:{\"src\":\"https://zkbitcoin.org/img/ethereum.png\",\"alt\":\"ethereum\"}}),_vm._v(_vm._s(_vm.selectedToken.symbol))])])]):_vm._e(),_vm._m(2),_c('h2',[_vm._v(\"Greeter says: \"+_vm._s(_vm.greeting)+\" 👋\")]),_c('h2',[_vm._v(\"Your Unstaked and Staked LP Tokens are worth a total \"+_vm._s((parseInt(_vm.ReservesTotal)/1e18* (parseInt(_vm.greetingStakeBalance)+parseInt(_vm.MaxsliderValue2)) / _vm.greetingLPTotal))+\" \"),_c('img',{staticStyle:{\"width\":\"25px\",\"height\":\"25px\"},attrs:{\"src\":\"https://zkbitcoin.org/img/ethereum.png\",\"alt\":\"ethereum\"}}),_vm._v(\"ETH and \"+_vm._s((parseInt(_vm.ReservesTotal2)/1e18* (parseInt(_vm.greetingStakeBalance)+parseInt(_vm.MaxsliderValue2)) / _vm.greetingLPTotal))+\" \"),_c('img',{staticStyle:{\"width\":\"25px\",\"height\":\"25px\"},attrs:{\"src\":\"https://zkbitcoin.org/img/zkBitcoin.png\",\"alt\":\"zkBitcoin\"}}),_vm._v(\"zkBTC\")]),_c('h1',[_vm._v(\"Depositing\")]),_c('h2',[_vm._v(\"Your LP Tokens \"+_vm._s(parseFloat((_vm.MaxsliderValue2/1e18)).toFixed(12).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2'))+\" \"),_c('img',{staticStyle:{\"width\":\"25px\",\"height\":\"25px\"},attrs:{\"src\":\"https://zkbitcoin.org/img/syncswap.png\",\"alt\":\"ethereum\"}}),_vm._v(\"LP Tokens \")]),_c('label',{attrs:{\"for\":\"slider\"}},[_vm._v(\"Slider Value:\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.sliderValue2),expression:\"sliderValue2\"}],attrs:{\"type\":\"range\",\"id\":\"slider\",\"name\":\"slider\",\"min\":\"0\",\"max\":_vm.MaxsliderValue2/1e18,\"step\":_vm.MaxsliderValue2/1e20},domProps:{\"value\":(_vm.sliderValue2)},on:{\"__r\":function($event){_vm.sliderValue2=$event.target.value}}}),_vm._v(\" Adjust to add a portion of the LP Tokens to the Staking Contract \"),_c('h3',[_vm._v(\"Tokens to deposit: \"+_vm._s(parseFloat(_vm.sliderValue2).toFixed(12).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2'))+\" \"),_c('img',{staticStyle:{\"width\":\"25px\",\"height\":\"25px\"},attrs:{\"src\":\"https://zkbitcoin.org/img/syncswap.png\",\"alt\":\"ethereum\"}}),_vm._v(\"LP Tokens\")]),_c('button',{staticClass:\"my-button\",attrs:{\"disabled\":!_vm.selectedToken || _vm.txStatus != 0},on:{\"click\":_vm.GetPermitAndStake}},[(_vm.shouldDisplayButton1 && _vm.selectedToken && !_vm.txStatus)?_c('span',[_vm._v(\"Click this to permit Approve \"),_c('img',{staticStyle:{\"width\":\"25px\",\"height\":\"25px\"},attrs:{\"src\":\"https://zkbitcoin.org/img/syncswap.png\",\"alt\":\"ethereum\"}}),_vm._v(\"LP Tokens to the Staking \"),_c('br'),_vm._v(\"and Stake \"+_vm._s(parseFloat(_vm.sliderValue2).toFixed(13).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2'))+\" \"),_c('img',{staticStyle:{\"width\":\"25px\",\"height\":\"25px\"},attrs:{\"src\":\"https://zkbitcoin.org/img/syncswap.png\",\"alt\":\"ethereum\"}}),_vm._v(\"LP Tokens in \"),_c('br'),_vm._v(\"one transaction\")]):(!_vm.selectedToken)?_c('span',[_vm._v(\"Select token to pay fee first\")]):(_vm.txStatus == 1)?_c('span',[_vm._v(\"Sending tx...\")]):(_vm.txStatus == 2)?_c('span',[_vm._v(\"Waiting until tx is committed...\")]):(_vm.txStatus == 3)?_c('span',[_vm._v(\"Updating the page...\")]):_vm._e()]),_c('button',{staticClass:\"my-button\",attrs:{\"disabled\":!_vm.selectedToken || _vm.txStatus != 0},on:{\"click\":_vm.ApproveLPtoStake}},[(_vm.shouldDisplayButton1 && _vm.selectedToken && !_vm.txStatus)?_c('span',[_vm._v(\" or Click this to approve \"+_vm._s(parseFloat(_vm.sliderValue2).toFixed(13).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2'))+\" \"),_c('img',{staticStyle:{\"width\":\"25px\",\"height\":\"25px\"},attrs:{\"src\":\"https://zkbitcoin.org/img/syncswap.png\",\"alt\":\"ethereum\"}}),_vm._v(\"LP Tokens to the Staking Contract in\"),_c('br'),_vm._v(\" 2 transactions\")]):(!_vm.selectedToken)?_c('span',[_vm._v(\"Select token to pay fee first\")]):(_vm.txStatus == 1)?_c('span',[_vm._v(\"Sending tx...\")]):(_vm.txStatus == 2)?_c('span',[_vm._v(\"Waiting until tx is committed...\")]):(_vm.txStatus == 3)?_c('span',[_vm._v(\"Updating the page...\")]):_vm._e()]),_c('button',{staticClass:\"my-button\",attrs:{\"disabled\":!_vm.selectedToken || _vm.txStatus != 0},on:{\"click\":_vm.AddPortionToStake}},[(!_vm.shouldDisplayButton1 && _vm.selectedToken && !_vm.txStatus)?_c('span',[_vm._v(\"Step 2) Click this to deposit \"+_vm._s(parseFloat(_vm.sliderValue2).toFixed(13).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2'))+\" \"),_c('img',{staticStyle:{\"width\":\"25px\",\"height\":\"25px\"},attrs:{\"src\":\"https://zkbitcoin.org/img/syncswap.png\",\"alt\":\"ethereum\"}}),_vm._v(\"LP Tokens to the Staking Contract\")]):(!_vm.selectedToken)?_c('span',[_vm._v(\"Select token to pay fee first\")]):(_vm.txStatus == 1)?_c('span',[_vm._v(\"Sending tx...\")]):(_vm.txStatus == 2)?_c('span',[_vm._v(\"Waiting until tx is committed...\")]):(_vm.txStatus == 3)?_c('span',[_vm._v(\"Updating the page...\")]):_vm._e()]),_c('h2',[_vm._v(\"Your Staked LP Tokens are worth \"+_vm._s((parseInt(_vm.ReservesTotal)/1e18* _vm.greetingStakeBalance / _vm.greetingLPTotal))+\" \"),_c('img',{staticStyle:{\"width\":\"25px\",\"height\":\"25px\"},attrs:{\"src\":\"https://zkbitcoin.org/img/ethereum.png\",\"alt\":\"ethereum\"}}),_vm._v(\"ETH and \"+_vm._s((parseInt(_vm.ReservesTotal2)/1e18* _vm.greetingStakeBalance / _vm.greetingLPTotal))+\" \"),_c('img',{staticStyle:{\"width\":\"25px\",\"height\":\"25px\"},attrs:{\"src\":\"https://zkbitcoin.org/img/zkBitcoin.png\",\"alt\":\"zkBitcoin\"}}),_vm._v(\"zkBTC\")]),_c('h2',[_vm._v(\"Your Percent of the Pool \"+_vm._s((_vm.greetingStakeBalance / _vm.greetingStakeBalanceTotal).toFixed(4) * 100)+\"% \")]),_c('h2',[_vm._v(\"Your Reward \"+_vm._s((_vm.StakeReward/1e18).toFixed(8))+\" \"),_c('img',{staticStyle:{\"width\":\"25px\",\"height\":\"25px\"},attrs:{\"src\":\"https://zkbitcoin.org/img/zkBitcoin.png\",\"alt\":\"zkBitcoin\"}}),_vm._v(\"zkBitcoin Tokens \")]),_c('h2',[_vm._v(\"Your Reward2 \"+_vm._s((_vm.StakeReward2/1e8).toFixed(8))+\" \"),_c('img',{staticStyle:{\"width\":\"25px\",\"height\":\"25px\"},attrs:{\"src\":\"https://zkbitcoin.org/img/0xbitcoin.png\",\"alt\":\"0xBitcoin\"}}),_vm._v(\"0xBitcoin Tokens \")]),_c('h2',[_vm._v(\"Your Reward3 \"+_vm._s((_vm.StakeReward3/1e18).toFixed(8))+\" \"),_c('img',{staticStyle:{\"width\":\"25px\",\"height\":\"25px\"},attrs:{\"src\":\"https://zkbitcoin.org/img/ethereum.png\",\"alt\":\"ethereum\"}}),_vm._v(\"Ethereum Tokens \")]),_c('button',{staticClass:\"my-button\",attrs:{\"disabled\":!_vm.selectedToken || _vm.txStatus != 0},on:{\"click\":_vm.GetStakingRewardsOnly}},[(_vm.selectedToken && !_vm.txStatus)?_c('span',[_vm._v(\"Claim Staking Rewards Only\")]):(!_vm.selectedToken)?_c('span',[_vm._v(\"Select token to pay fee first\")]):(_vm.txStatus == 1)?_c('span',[_vm._v(\"Sending tx...\")]):(_vm.txStatus == 2)?_c('span',[_vm._v(\"Waiting until tx is committed...\")]):(_vm.txStatus == 3)?_c('span',[_vm._v(\"Updating the page...\")]):(_vm.retreivingFee)?_c('span',[_vm._v(\"Updating the fee...\")]):_vm._e()]),_c('br'),_c('br'),_c('h1',[_vm._v(\"Withdrawing\")]),_c('h3',[_vm._v(\"Total Amount of Staked LP Tokens: \"+_vm._s(parseFloat(_vm.MaxsliderValue/1e18).toFixed(12).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2'))+\" \"),_c('img',{staticStyle:{\"width\":\"25px\",\"height\":\"25px\"},attrs:{\"src\":\"https://zkbitcoin.org/img/syncswap.png\",\"alt\":\"ethereum\"}}),_vm._v(\"LP Tokens\")]),_c('label',{attrs:{\"for\":\"slider\"}},[_vm._v(\"Slider Value:\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.sliderValue),expression:\"sliderValue\"}],attrs:{\"type\":\"range\",\"id\":\"slider\",\"name\":\"slider\",\"min\":\"0\",\"max\":_vm.MaxsliderValue/1e18,\"step\":_vm.MaxsliderValue/1e20},domProps:{\"value\":(_vm.sliderValue)},on:{\"__r\":function($event){_vm.sliderValue=$event.target.value}}}),_vm._v(\" Adjust below to remove a portion of the LP Tokens \"),_c('h3',[_vm._v(\"Tokens to withdraw: \"+_vm._s(parseFloat(_vm.sliderValue).toFixed(12).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2'))+\" \"),_c('img',{staticStyle:{\"width\":\"25px\",\"height\":\"25px\"},attrs:{\"src\":\"https://zkbitcoin.org/img/syncswap.png\",\"alt\":\"ethereum\"}}),_vm._v(\"LP Tokens\")]),_c('button',{staticClass:\"my-button\",attrs:{\"disabled\":!_vm.selectedToken || _vm.txStatus != 0},on:{\"click\":_vm.RemovePortionOfStake}},[(_vm.selectedToken && !_vm.txStatus)?_c('span',[_vm._v(\"Click this to withdraw \"+_vm._s(parseFloat(_vm.sliderValue).toFixed(12).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2'))+\" \"),_c('img',{staticStyle:{\"width\":\"25px\",\"height\":\"25px\"},attrs:{\"src\":\"https://zkbitcoin.org/img/syncswap.png\",\"alt\":\"ethereum\"}}),_vm._v(\"LP Tokens to Withdraw\")]):(!_vm.selectedToken)?_c('span',[_vm._v(\"Select token to pay fee first\")]):(_vm.txStatus == 1)?_c('span',[_vm._v(\"Sending tx...\")]):(_vm.txStatus == 2)?_c('span',[_vm._v(\"Waiting until tx is committed...\")]):(_vm.txStatus == 3)?_c('span',[_vm._v(\"Updating the page...\")]):(_vm.retreivingFee)?_c('span',[_vm._v(\"Updating the fee...\")]):_vm._e()]),_c('br'),_c('br'),_c('button',{staticClass:\"my-button\",attrs:{\"disabled\":!_vm.selectedToken || _vm.txStatus != 0},on:{\"click\":_vm.ExitOnly}},[(_vm.selectedToken && !_vm.txStatus)?_c('span',[_vm._v(\"Remove All \"),_c('img',{staticStyle:{\"width\":\"25px\",\"height\":\"25px\"},attrs:{\"src\":\"https://zkbitcoin.org/img/syncswap.png\",\"alt\":\"ethereum\"}}),_vm._v(\"LP Tokens Staked and Claim Rewards\")]):(!_vm.selectedToken)?_c('span',[_vm._v(\"Select token to pay fee first\")]):(_vm.txStatus == 1)?_c('span',[_vm._v(\"Sending tx...\")]):(_vm.txStatus == 2)?_c('span',[_vm._v(\"Waiting until tx is committed...\")]):(_vm.txStatus == 3)?_c('span',[_vm._v(\"Updating the page...\")]):(_vm.retreivingFee)?_c('span',[_vm._v(\"Updating the fee...\")]):_vm._e()]),_c('br'),_c('br'),_c('br'),_c('br'),_c('br'),_c('h1',[_vm._v(\" Advanced Staking Stuff\")]),_c('h1',[_vm._v(\"Advanced Depositing\")]),_c('h3',[_vm._v(\"Deposit for other users\")]),_vm._v(\" Ethereum Address to stake LP for:\"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ethereumAddress),expression:\"ethereumAddress\"}],staticClass:\"ethereum-address-input\",style:({ width: _vm.textBoxWidth }),attrs:{\"placeholder\":_vm.userAccountsss},domProps:{\"value\":(_vm.ethereumAddress)},on:{\"input\":function($event){if($event.target.composing)return;_vm.ethereumAddress=$event.target.value}}}),_c('h2',[_vm._v(\"Your LP Tokens \"+_vm._s(parseFloat((_vm.MaxsliderValue2/1e18)).toFixed(12).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2'))+\" \"),_c('img',{staticStyle:{\"width\":\"25px\",\"height\":\"25px\"},attrs:{\"src\":\"https://zkbitcoin.org/img/syncswap.png\",\"alt\":\"0xBitcoin\"}}),_vm._v(\" LP Tokens \")]),_c('label',{attrs:{\"for\":\"slider\"}},[_vm._v(\"Slider Value:\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.sliderValue2),expression:\"sliderValue2\"}],attrs:{\"type\":\"range\",\"id\":\"slider\",\"name\":\"slider\",\"min\":\"0\",\"max\":_vm.MaxsliderValue2/1e18,\"step\":_vm.MaxsliderValue2/1e20},domProps:{\"value\":(_vm.sliderValue2)},on:{\"__r\":function($event){_vm.sliderValue2=$event.target.value}}}),_vm._v(\" Adjust below to add a portion of the LP Tokens \"),_c('p',[_vm._v(\"Selected slider value: \"+_vm._s(parseFloat(_vm.sliderValue2).toFixed(13).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2'))+\" \")]),_vm._v(\" 222GetPermitAndStakeAdvanced \"),_c('button',{staticClass:\"my-button\",attrs:{\"disabled\":!_vm.selectedToken || _vm.txStatus != 0},on:{\"click\":_vm.GetPermitAndStakeAdvanced}},[(_vm.shouldDisplayButton1 && _vm.selectedToken && !_vm.txStatus)?_c('span',[_vm._v(\"Click this to permit Approve \"),_c('img',{staticStyle:{\"width\":\"25px\",\"height\":\"25px\"},attrs:{\"src\":\"https://zkbitcoin.org/img/syncswap.png\",\"alt\":\"0xBitcoin\"}}),_vm._v(\" LP Tokens to the Staking \"),_c('br'),_vm._v(\"and Stake \"+_vm._s(parseFloat(_vm.sliderValue2).toFixed(13).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2'))),_c('img',{staticStyle:{\"width\":\"25px\",\"height\":\"25px\"},attrs:{\"src\":\"https://zkbitcoin.org/img/syncswap.png\",\"alt\":\"0xBitcoin\"}}),_vm._v(\" LP Tokens on behalf of \"+_vm._s(_vm.ethereumAddress.slice(0,6))+\"...\"+_vm._s(_vm.ethereumAddress.slice(-4))+\" in \"),_c('br'),_vm._v(\"one transaction\")]):(!_vm.selectedToken)?_c('span',[_vm._v(\"Select token to pay fee first\")]):(_vm.txStatus == 1)?_c('span',[_vm._v(\"Sending tx...\")]):(_vm.txStatus == 2)?_c('span',[_vm._v(\"Waiting until tx is committed...\")]):(_vm.txStatus == 3)?_c('span',[_vm._v(\"Updating the page...\")]):_vm._e()]),_c('button',{staticClass:\"my-button\",attrs:{\"disabled\":!_vm.selectedToken || _vm.txStatus != 0},on:{\"click\":_vm.ApproveLPtoStakeAlert}},[(_vm.shouldDisplayButton1 && _vm.selectedToken && !_vm.txStatus)?_c('span',[_vm._v(\" or Click this to approve \"+_vm._s(parseFloat(_vm.sliderValue2).toFixed(13).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2'))+\" \"),_c('img',{staticStyle:{\"width\":\"25px\",\"height\":\"25px\"},attrs:{\"src\":\"https://zkbitcoin.org/img/syncswap.png\",\"alt\":\"0xBitcoin\"}}),_vm._v(\" LP Tokens to the Staking Contract on behalf of \"+_vm._s(_vm.ethereumAddress.slice(0,6))+\"...\"+_vm._s(_vm.ethereumAddress.slice(-4))+\" in\"),_c('br'),_vm._v(\" 2 transactions\")]):(!_vm.selectedToken)?_c('span',[_vm._v(\"Select token to pay fee first\")]):(_vm.txStatus == 1)?_c('span',[_vm._v(\"Sending tx...\")]):(_vm.txStatus == 2)?_c('span',[_vm._v(\"Waiting until tx is committed...\")]):(_vm.txStatus == 3)?_c('span',[_vm._v(\"Updating the page...\")]):_vm._e()]),_c('button',{staticClass:\"my-button\",attrs:{\"disabled\":!_vm.selectedToken || _vm.txStatus != 0},on:{\"click\":_vm.AddPortionToStakeAdvanced}},[(!_vm.shouldDisplayButton1 && _vm.selectedToken && !_vm.txStatus)?_c('span',[_vm._v(\"Step 2) Click this to deposit \"+_vm._s(parseFloat(_vm.sliderValue2).toFixed(13).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2'))+\" \"),_c('img',{staticStyle:{\"width\":\"25px\",\"height\":\"25px\"},attrs:{\"src\":\"https://zkbitcoin.org/img/syncswap.png\",\"alt\":\"0xBitcoin\"}}),_vm._v(\" LP Tokens to the Staking Contract on behalf of \"+_vm._s(_vm.ethereumAddress.slice(0,6))+\"...\"+_vm._s(_vm.ethereumAddress.slice(-4)))]):(!_vm.selectedToken)?_c('span',[_vm._v(\"Select token to pay fee first\")]):(_vm.txStatus == 1)?_c('span',[_vm._v(\"Sending tx...\")]):(_vm.txStatus == 2)?_c('span',[_vm._v(\"Waiting until tx is committed...\")]):(_vm.txStatus == 3)?_c('span',[_vm._v(\"Updating the page...\")]):_vm._e()]),_c('h1',[_vm._v(\"Advanced Rewards Claiming\")]),_c('h3',[_vm._v(\"Claim rewards for other users\")]),_vm._v(\" Ethereum Address to stake LP for:\"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ethereumAddress2),expression:\"ethereumAddress2\"}],staticClass:\"ethereum-address-input\",style:({ width: _vm.textBoxWidth }),attrs:{\"placeholder\":_vm.userAccountsss},domProps:{\"value\":(_vm.ethereumAddress2)},on:{\"input\":function($event){if($event.target.composing)return;_vm.ethereumAddress2=$event.target.value}}}),_c('button',{staticClass:\"my-button\",attrs:{\"disabled\":!_vm.selectedToken || _vm.txStatus != 0},on:{\"click\":_vm.GetStakingRewardsOnlyAdvanced}},[(_vm.selectedToken && !_vm.txStatus)?_c('span',[_vm._v(\"Claim Staking Rewards for\")]):(!_vm.selectedToken)?_c('span',[_vm._v(\"Select token to pay fee first\")]):(_vm.txStatus == 1)?_c('span',[_vm._v(\"Sending tx...\")]):(_vm.txStatus == 2)?_c('span',[_vm._v(\"Waiting until tx is committed...\")]):(_vm.txStatus == 3)?_c('span',[_vm._v(\"Updating the page...\")]):(_vm.retreivingFee)?_c('span',[_vm._v(\"Updating the fee...\")]):_vm._e()]),_c('div',{staticClass:\"main-box\"}),_c('br'),_c('br'),_c('br'),_c('br'),_c('h1',[_c('a',{attrs:{\"href\":_vm.URL_LP_CONTRACT_ADDRESS2}},[_vm._v(\"Get Test LP Tokens to Test Staking Contract Here\")])]),_c('br'),_c('br'),_vm._v(\" Get Test 0xBitcoin Token to Test Staking Contract (by sending it some 0xBitcoin as a reward to test the payout) \"),_c('br'),_c('button',{staticClass:\"my-button\",attrs:{\"disabled\":!_vm.selectedToken || _vm.txStatus != 0},on:{\"click\":_vm.GetFreeLPTokens2}},[(_vm.selectedToken && !_vm.txStatus)?_c('span',[_vm._v(\"Get Test 0xBitcoin Tokens to test sending Rewards Contract some to test rewards\")]):(!_vm.selectedToken)?_c('span',[_vm._v(\"Select token to pay fee first\")]):(_vm.txStatus == 1)?_c('span',[_vm._v(\"Sending tx...\")]):(_vm.txStatus == 2)?_c('span',[_vm._v(\"Waiting until tx is committed...\")]):(_vm.txStatus == 3)?_c('span',[_vm._v(\"Updating the page...\")]):(_vm.retreivingFee)?_c('span',[_vm._v(\"Updating the fee...\")]):_vm._e()]),_c('br'),_c('h2',[_vm._v(\"Staking New Period Starts at: \"+_vm._s((_vm.StakingNewPeriod))+\" seconds\")]),_c('h2',[_vm._v(\"Current Timestamp Start at: \"+_vm._s((_vm.CurrentTimestamp))+\" seconds\")]),_c('br'),_vm._v(\"Start New 25 Day Staking Period \"),_c('button',{staticClass:\"change-button\",attrs:{\"disabled\":!_vm.selectedToken || _vm.txStatus != 0 || parseFloat(_vm.StakingNewPeriod) > parseFloat(_vm.CurrentTimestamp)},on:{\"click\":_vm.initilizeNewStakingPeriod}},[(_vm.selectedToken && !_vm.txStatus)?_c('span',[_vm._v(\"initilizeNewStakingPeriod\")]):(!_vm.selectedToken)?_c('span',[_vm._v(\"Select token to pay fee first\")]):(_vm.txStatus == 1)?_c('span',[_vm._v(\"Sending tx...\")]):(_vm.txStatus == 2)?_c('span',[_vm._v(\"Waiting until tx is committed...\")]):(_vm.txStatus == 3)?_c('span',[_vm._v(\"Updating the page...\")]):(_vm.retreivingFee)?_c('span',[_vm._v(\"Updating the fee...\")]):_vm._e()]),_c('br'),_c('br'),_c('br'),_vm._v(\" Contracts Listed below\"),_c('br'),_c('h2',[_vm._v(\"zkBitcoin Contract: \"+_vm._s((_vm.zkBTC_CONTRACT_ADDRESS2))+\" \"),_c('a',{attrs:{\"href\":_vm.URL_zkBTC_CONTRACT_ADDRESS2,\"target\":\"_blank\"}},[_vm._v(\"Go to zkSyncScan Explorer for zkBitcoin Contract Here\")])]),_c('h2',[_vm._v(\"Auctions Contract: \"+_vm._s((_vm.AUCTION_CONTRACT_ADDRESS2))+\" \"),_c('a',{attrs:{\"href\":_vm.URL_AUCTION_CONTRACT_ADDRESS2,\"target\":\"_blank\"}},[_vm._v(\"Go to zkSyncScan Explorer for Auction Contract Here\")])]),_c('h2',[_vm._v(\"0xBitcoin Contract: \"+_vm._s((_vm.ZeroxBitcoin_addresss2))+\" \"),_c('a',{attrs:{\"href\":_vm.URL_0xBTC_CONTRACT_ADDRESS2,\"target\":\"_blank\"}},[_vm._v(\"Go to zkSyncScan Explorer for 0xBTC Contract Here\")])]),_c('h2',[_vm._v(\"LP Contract: \"+_vm._s((_vm.LP_CONTRACT_ADDRESS2))+\" \"),_c('a',{attrs:{\"href\":_vm.URL_LP_CONTRACT_ADDRESS2}},[_vm._v(\"Get LP #1 Tokens to by Deposit/Withdraw on Contract #1 Here\")])]),_c('h2',[_vm._v(\"Staking Contract: \"+_vm._s((_vm.Staking_zkBTC_CONTRACT_ADDRESS2))+\" \"),_c('a',{attrs:{\"href\":_vm.URL_Staking_zkBTC_CONTRACT_ADDRESS2,\"target\":\"_blank\"}},[_vm._v(\"Go to zkSyncScan Explorer for Staking #1 Contract Here\")])]),_c('h2',[_vm._v(\"LP #2 Contract: \"+_vm._s((_vm.LP_SECOND_CONTRACT_ADDRESS2))+\" \"),_c('a',{attrs:{\"href\":_vm.URL_LP_SECOND_CONTRACT_ADDRESS2}},[_vm._v(\"Get LP #2 Tokens to by Deposit/Withdraw on Contract #2 Here\")])]),_c('h2',[_vm._v(\"Staking Contract #2: \"+_vm._s((_vm.LP_SECOND_STAKING_CONTRACT_ADDRESS2))+\" \"),_c('a',{attrs:{\"href\":_vm.URL_Staking_SECOUND_zkBTC_CONTRACT_ADDRESS2,\"target\":\"_blank\"}},[_vm._v(\"Go to zkSyncScan Explorer for Staking #2 Contract Here\")])]),_c('h3',[_vm._v(\"Changes needed for mainnet, we need to not allow adjustDiff in zkBitcoin\")]),_vm._v(\" These are admin functions below \"),_c('br'),_c('br'),_c('button',{staticClass:\"change-button\",attrs:{\"disabled\":!_vm.selectedToken || _vm.txStatus != 0},on:{\"click\":_vm.initilizeABAS}},[(_vm.selectedToken && !_vm.txStatus)?_c('span',[_vm._v(\"ABAS initilize\")]):(!_vm.selectedToken)?_c('span',[_vm._v(\"Select token to pay fee first\")]):(_vm.txStatus == 1)?_c('span',[_vm._v(\"Sending tx...\")]):(_vm.txStatus == 2)?_c('span',[_vm._v(\"Waiting until tx is committed...\")]):(_vm.txStatus == 3)?_c('span',[_vm._v(\"Updating the page...\")]):(_vm.retreivingFee)?_c('span',[_vm._v(\"Updating the fee...\")]):_vm._e()]),_vm._v(\" 2nd \"),_c('button',{staticClass:\"change-button\",attrs:{\"disabled\":!_vm.selectedToken || _vm.txStatus != 0},on:{\"click\":_vm.initilizeAuction}},[(_vm.selectedToken && !_vm.txStatus)?_c('span',[_vm._v(\"InitilizeAuction\")]):(!_vm.selectedToken)?_c('span',[_vm._v(\"Select token to pay fee first\")]):(_vm.txStatus == 1)?_c('span',[_vm._v(\"Sending tx...\")]):(_vm.txStatus == 2)?_c('span',[_vm._v(\"Waiting until tx is committed...\")]):(_vm.txStatus == 3)?_c('span',[_vm._v(\"Updating the page...\")]):(_vm.retreivingFee)?_c('span',[_vm._v(\"Updating the fee...\")]):_vm._e()]),_c('br'),_c('h1',[_vm._v(\" Pool Extra Stats \")]),_c('h1',[_vm._v(\"LP Tokens Total Supply \"+_vm._s(parseFloat( (parseInt(_vm.greetingLPTotal)/1e18)).toFixed(18).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2'))+\" LP Tokens\")]),_c('h2',[_vm._v(\"Pool is worth \"+_vm._s(parseFloat( (parseInt(_vm.ReservesTotal)/1e18)).toFixed(12).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2'))+\" ETH and \"+_vm._s(parseFloat( (parseInt(_vm.ReservesTotal2)/1e18)).toFixed(12).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2'))+\" zkBTC \")]),_c('h2',[_vm._v(\"Total ETH in Pool = \"+_vm._s(parseFloat( (parseInt(_vm.ReservesTotal)/1e18)).toFixed(12).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2'))+\" ETH \")]),_c('h2',[_vm._v(\"Total zkBitcoin in Pool = \"+_vm._s(parseFloat( (parseInt(_vm.ReservesTotal2)/1e18)).toFixed(12).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2'))+\" zkBTC \")]),_c('h1',[_vm._v(\" Percent of Total Liquidity Staked for Pool \"+_vm._s((_vm.greetingStakeBalanceTotal / _vm.greetingLPTotal*100 ).toFixed(4))+\" % \")]),_c('h2',[_vm._v(\"Your Total ETH in Pool =\"+_vm._s(parseFloat( (parseInt(_vm.ReservesTotal)/1e18* _vm.greetingStakeBalance / _vm.greetingLPTotal) ).toFixed(12).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2'))+\" ETH \")]),_c('h2',[_vm._v(\"Your Total zkBitcoin in Pool = \"+_vm._s(parseFloat( (parseInt(_vm.ReservesTotal2)/1e18* _vm.greetingStakeBalance / _vm.greetingLPTotal) ).toFixed(12).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2'))+\" zkBTC \")]),_c('h2',[_vm._v(\"Your Balance of LP Tokens in Staking Contract \"+_vm._s(parseFloat( _vm.greetingStakeBalance/ 1e18 ).toFixed(12).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2'))+\" \")]),_c('h2',[_vm._v(\"Total Balance of LP Tokens in Staking Contract \"+_vm._s(parseFloat( _vm.greetingStakeBalanceTotal/ 1e18 ).toFixed(12).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2'))+\" \")]),_c('h2',[_vm._v(\"Your Approved LP Tokens for Contract \"+_vm._s(parseFloat( _vm.ApprovedLPforContract/ 1e18 ).toFixed(12).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2'))+\" Approved LP Tokens\")])],1):_c('div',{attrs:{\"id\":\"app\"}},[_c('Header'),_c('div',{staticClass:\"start-screen\"},[_vm._m(3),_vm._m(4),_vm._m(5),_c('h1',[_vm._v(\"Welcome to the Ethereum Staking dAPP for zkBitcoin! Connect Metamask Below to enter\")]),_c('button',{staticStyle:{\"font-size\":\"28px\",\"padding\":\"10px 20px\"},on:{\"click\":_vm.connectMetamask}},[_vm._v(\"Connect Metamask By clicking here\")]),_vm._m(6),_c('br'),_c('br'),_c('br'),_c('br'),_vm._v(\" Contracts Listed below\"),_c('br'),_c('h2',[_vm._v(\"zkBitcoin Contract: \"+_vm._s((_vm.zkBTC_CONTRACT_ADDRESS2))+\" \"),_c('a',{attrs:{\"href\":_vm.URL_zkBTC_CONTRACT_ADDRESS2,\"target\":\"_blank\"}},[_vm._v(\"Go to zkSyncScan Explorer for zkBitcoin Contract Here\")])]),_c('h2',[_vm._v(\"Auctions Contract: \"+_vm._s((_vm.AUCTION_CONTRACT_ADDRESS2))+\" \"),_c('a',{attrs:{\"href\":_vm.URL_AUCTION_CONTRACT_ADDRESS2,\"target\":\"_blank\"}},[_vm._v(\"Go to zkSyncScan Explorer for Auction Contract Here\")])]),_c('h2',[_vm._v(\"0xBitcoin Contract: \"+_vm._s((_vm.ZeroxBitcoin_addresss2))+\" \"),_c('a',{attrs:{\"href\":_vm.URL_0xBTC_CONTRACT_ADDRESS2,\"target\":\"_blank\"}},[_vm._v(\"Go to zkSyncScan Explorer for 0xBTC Contract Here\")])]),_c('h2',[_vm._v(\"LP Contract: \"+_vm._s((_vm.LP_CONTRACT_ADDRESS2))+\" \"),_c('a',{attrs:{\"href\":_vm.URL_LP_CONTRACT_ADDRESS2}},[_vm._v(\"Get LP #1 Tokens to by Deposit/Withdraw on Contract #1 Here\")])]),_c('h2',[_vm._v(\"Staking Contract: \"+_vm._s((_vm.Staking_zkBTC_CONTRACT_ADDRESS2))+\" \"),_c('a',{attrs:{\"href\":_vm.URL_Staking_zkBTC_CONTRACT_ADDRESS2,\"target\":\"_blank\"}},[_vm._v(\"Go to zkSyncScan Explorer for Staking #1 Contract Here\")])]),_c('h2',[_vm._v(\"LP #2 Contract: \"+_vm._s((_vm.LP_SECOND_CONTRACT_ADDRESS2))+\" \"),_c('a',{attrs:{\"href\":_vm.URL_LP_SECOND_CONTRACT_ADDRESS2}},[_vm._v(\"Get LP #2 Tokens to by Deposit/Withdraw on Contract #2 Here\")])]),_c('h2',[_vm._v(\"Staking Contract #2: \"+_vm._s((_vm.LP_SECOND_STAKING_CONTRACT_ADDRESS2))+\" \"),_c('a',{attrs:{\"href\":_vm.URL_Staking_SECOUND_zkBTC_CONTRACT_ADDRESS2,\"target\":\"_blank\"}},[_vm._v(\"Go to zkSyncScan Explorer for Staking #2 Contract Here\")])]),_c('h3',[_vm._v(\"Changes needed for mainnet, BLOCKS_PER_ADJUSTMENT needs to be changed from 16 to 1024\")]),_c('h3',[_vm._v(\"Changes needed for mainnet, Auction length needs to be 15 days instead of 10 minutes\")])])],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('h1',[_vm._v(\"Download Testnet Miner for zkBitcoin @ \"),_c('a',{attrs:{\"href\":\"https://github.com/ZKBitcoinToken/zkBTC-Testnet-Mainnet-Almost\"}},[_vm._v(\"Click here to download Windows GPU and CPU Miner\")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h1',[_vm._v(\"Get ZK Sync Testnet ETH @ \"),_c('a',{attrs:{\"href\":\"https://faucet.triangleplatform.com/zksync/testnet?\"}},[_vm._v(\"CLICK HERE TO GO TO ETH FAUCET\")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h1',[_vm._v(\" zkBitcoin Staking \"),_c('img',{staticStyle:{\"width\":\"45px\",\"height\":\"45px\"},attrs:{\"src\":\"https://zkbitcoin.org/img/ethereum.png\",\"alt\":\"ethereum\"}}),_vm._v(\"ETH Dapp, v1.1.3\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h1',[_vm._v(\"Download Testnet Miner for zkBitcoin @ \"),_c('a',{attrs:{\"href\":\"https://github.com/ZKBitcoinToken/zkBTC-Testnet-Mainnet-Almost\"}},[_vm._v(\"Click here to download Windows GPU and CPU Miner\")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h1',[_vm._v(\"Get ZK Sync Testnet ETH @ \"),_c('a',{attrs:{\"href\":\"https://faucet.triangleplatform.com/zksync/testnet?\"}},[_vm._v(\"CLICK HERE TO GO TO ETH FAUCET\")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h1',[_vm._v(\"Add ZK Sync Testnet to Your Metamask @ \"),_c('a',{attrs:{\"href\":\"https://chainlist.org/chain/280\"}},[_vm._v(\"CLICK HERE TO ADD ZK SYNC TESTNET TO METAMASK\")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h1',[_vm._v(\"Enter Discord @ \"),_c('a',{attrs:{\"href\":\"https://discord.gg/FwXGz5PvjF\"}},[_vm._v(\"CLICK HERE TO GO TO DISCORD\")])])\n}]\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _vm._m(0)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('header',[_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"logo\"},[_c('a',{attrs:{\"href\":\"/\"}},[_vm._v(\"ZK Sync Era zkBitcoin Staking Ethereum DAPP\")])]),_c('nav',[_c('ul',[_c('li',[_vm._v(\"LINKS TO zkBTC Dapps Below \")]),_c('li',[_c('a',{staticStyle:{\"font-size\":\"25px\"},attrs:{\"href\":\"https://testnet.zkbitcoin.org/dapp_auctions/\"}},[_vm._v(\"zkBTC Auctions DAPP\")])]),_c('li',[_c('a',{staticStyle:{\"font-size\":\"25px\"},attrs:{\"href\":\"https://testnet.zkbitcoin.org/dapp_staking_eth/\"}},[_vm._v(\"zkBTC Staking Ethereum DAPP\")])]),_c('li',[_c('a',{staticStyle:{\"font-size\":\"25px\"},attrs:{\"href\":\"https://testnet.zkbitcoin.org/dapp_staking_0xbtc/\"}},[_vm._v(\"zkBTC Staking 0xBitcoin DAPP\")])])])])])])\n}]\n\nexport { render, staticRenderFns }","<template>\n  <header>\n    <div class=\"container\">\n      <div class=\"logo\">\n        <a href=\"/\">ZK Sync Era zkBitcoin Staking Ethereum DAPP</a>\n      </div>\n      <nav>\n        <ul><li>LINKS TO zkBTC Dapps Below\n          <li><a style=\"font-size: 25px;\" href=\"https://testnet.zkbitcoin.org/dapp_auctions/\">zkBTC Auctions DAPP</a>\n</li>\n          <li><a style=\"font-size: 25px;\" href=\"https://testnet.zkbitcoin.org/dapp_staking_eth/\">zkBTC Staking Ethereum DAPP</a></li>\n          <li><a style=\"font-size: 25px;\" href=\"https://testnet.zkbitcoin.org/dapp_staking_0xbtc/\">zkBTC Staking 0xBitcoin DAPP</a></li>\n        </ul>\n      </nav>\n    </div>\n  </header>\n</template>\n\n<script>\nexport default {\n  name: 'Header',\n};\n</script>\n\n<style scoped>\nheader {\n  background-color: #333;\n  color: #fff;\n  padding: 20px 0;\n}\n\n.container {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  max-width: 960px;\n  margin: 0 auto;\n}\n\n.logo a {\n  font-size: 24px;\n  font-weight: bold;\n  color: #fff;\n  text-decoration: none;\n}\n\nnav ul {\n  display: flex;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\nnav li {\n  margin-right: 20px;\n}\n\nnav li:last-child {\n  margin-right: 0;\n}\n\nnav a {\n  font-size: 16px;\n  color: #fff;\n  text-decoration: none;\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Header.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Header.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Header.vue?vue&type=template&id=6c297f01&scoped=true\"\nimport script from \"./Header.vue?vue&type=script&lang=js\"\nexport * from \"./Header.vue?vue&type=script&lang=js\"\nimport style0 from \"./Header.vue?vue&type=style&index=0&id=6c297f01&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6c297f01\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\" v-if=\"!mainLoading\">\n    <Header />\n    \n    <h1>Download Testnet Miner for zkBitcoin @ <a href=\"https://github.com/ZKBitcoinToken/zkBTC-Testnet-Mainnet-Almost\">Click here to download Windows GPU and CPU Miner</a></h1>\n    <h1>Get ZK Sync Testnet ETH @ <a href=\"https://faucet.triangleplatform.com/zksync/testnet?\">CLICK HERE TO GO TO ETH FAUCET</a></h1>\n    <h1>  <a :href=\"URL_LP_CONTRACT_ADDRESS2\">Get ETH/zkBTC LP Tokens by depositing to the LP Click here</a></h1>\n<!---\n    Get Test 0xBitcoin Token   to Test Staking Contract (by sending it some 0xBitcoin as a reward to test the payout)\n<br>\n        <button\n          class=\"my-button\"\n          :disabled=\"!selectedToken || txStatus != 0\"\n          v-on:click=\"GetFreeLPTokens2\"\n        >\n          <span v-if=\"selectedToken && !txStatus\">Get Test 0xBitcoin Tokens to test sending Rewards Contract some to test rewards</span>\n          <span v-else-if=\"!selectedToken\">Select token to pay fee first</span>\n          <span v-else-if=\"txStatus == 1\">Sending tx...</span>\n          <span v-else-if=\"txStatus == 2\"\n            >Waiting until tx is committed...</span\n          >\n          <span v-else-if=\"txStatus == 3\">Updating the page...</span>\n          <span v-else-if=\"retreivingFee\">Updating the fee...</span>\n        </button>\n        <br><br> <br><br>\n\n<h1>Get Test LP Tokens to Test Staking Contract Here  </h1>\n        <button\n          class=\"my-button\"\n          :disabled=\"!selectedToken || txStatus != 0 || retreivingFee\"\n          v-on:click=\"GetFreeLPTokens\"\n        >\n          <span v-if=\"selectedToken && !txStatus\">Get Test LP Tokens to test Staking Contract</span>\n          <span v-else-if=\"!selectedToken\">Select token to pay fee first</span>\n          <span v-else-if=\"txStatus == 1\">Sending tx...</span>\n          <span v-else-if=\"txStatus == 2\"\n            >Waiting until tx is committed...</span\n          >\n          <span v-else-if=\"txStatus == 3\">Updating the page...</span>\n          <span v-else-if=\"retreivingFee\">Updating the fee...</span>\n        </button>\n        <br>\n-->\n\t<div class=\"balance\" v-if=\"selectedToken\">\n        <p>\n         Your zkSync Era Account: \n<a :href=\"'https://goerli.explorer.zksync.io/address/' + userAccountsss\">\n    {{ userAccountsss }}\n</a>  <p>\n          Your zkSync Era ETH: <span>{{ currentBalance }} <img src=\"https://zkbitcoin.org/img/ethereum.png\" alt=\"ethereum\" style=\"width: 25px; height: 25px;\" />{{ selectedToken.symbol }}</span>\n        </p>\n        \n      </div>  \n    <h1> zkBitcoin Staking <img src=\"https://zkbitcoin.org/img/ethereum.png\" alt=\"ethereum\" style=\"width: 45px; height: 45px;\" />ETH Dapp, v1.1.3</h1>\n    <h2>Greeter says: {{ greeting }} 👋</h2>\n<h2>Your Unstaked and Staked LP Tokens are worth a total {{ (parseInt(ReservesTotal)/1e18* (parseInt(greetingStakeBalance)+parseInt(MaxsliderValue2)) / greetingLPTotal) }} <img src=\"https://zkbitcoin.org/img/ethereum.png\" alt=\"ethereum\" style=\"width: 25px; height: 25px;\" />ETH and {{  (parseInt(ReservesTotal2)/1e18* (parseInt(greetingStakeBalance)+parseInt(MaxsliderValue2)) / greetingLPTotal) }}  <img src=\"https://zkbitcoin.org/img/zkBitcoin.png\" alt=\"zkBitcoin\" style=\"width: 25px; height: 25px;\" />zkBTC</h2>\n\n<h1>Depositing</h1>\n <h2>Your LP Tokens {{  parseFloat((MaxsliderValue2/1e18)).toFixed(12).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2') }} <img src=\"https://zkbitcoin.org/img/syncswap.png\" alt=\"ethereum\" style=\"width: 25px; height: 25px;\" />LP Tokens </h2>\n   \n \n<label for=\"slider\">Slider Value:</label>\n<input\n  type=\"range\"\n  id=\"slider\"\n  name=\"slider\"\n  min=\"0\"\n  :max=\"MaxsliderValue2/1e18\"\n  :step=\"MaxsliderValue2/1e20\"\n  v-model=\"sliderValue2\"\n/>\n\nAdjust to add a portion of the LP Tokens to the Staking Contract\n<h3>Tokens to deposit: {{ parseFloat(sliderValue2).toFixed(12).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2') }} <img src=\"https://zkbitcoin.org/img/syncswap.png\" alt=\"ethereum\" style=\"width: 25px; height: 25px;\" />LP Tokens</h3>\n     <button\n          class=\"my-button\"\n          :disabled=\"!selectedToken || txStatus != 0\"\n          v-on:click=\"GetPermitAndStake\"\n        >\n          <span v-if=\"shouldDisplayButton1 && selectedToken && !txStatus\">Click this to permit Approve <img src=\"https://zkbitcoin.org/img/syncswap.png\" alt=\"ethereum\" style=\"width: 25px; height: 25px;\" />LP Tokens to the Staking <br>and Stake {{ parseFloat(sliderValue2).toFixed(13).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2') }} <img src=\"https://zkbitcoin.org/img/syncswap.png\" alt=\"ethereum\" style=\"width: 25px; height: 25px;\" />LP Tokens in <br>one transaction</span>\n          <span v-else-if=\"!selectedToken\">Select token to pay fee first</span>\n          <span v-else-if=\"txStatus == 1\">Sending tx...</span>\n          <span v-else-if=\"txStatus == 2\"\n            >Waiting until tx is committed...</span\n          >\n          <span v-else-if=\"txStatus == 3\">Updating the page...</span>\n        </button>\n\t<button\n          class=\"my-button\"\n          :disabled=\"!selectedToken || txStatus != 0\"\n          v-on:click=\"ApproveLPtoStake\"\n        >\n          <span v-if=\"shouldDisplayButton1 && selectedToken && !txStatus\"> or Click this to approve {{ parseFloat(sliderValue2).toFixed(13).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2') }} <img src=\"https://zkbitcoin.org/img/syncswap.png\" alt=\"ethereum\" style=\"width: 25px; height: 25px;\" />LP Tokens to the Staking Contract in<br> 2 transactions</span>\n          <span v-else-if=\"!selectedToken\">Select token to pay fee first</span>\n          <span v-else-if=\"txStatus == 1\">Sending tx...</span>\n          <span v-else-if=\"txStatus == 2\"\n            >Waiting until tx is committed...</span\n          >\n          <span v-else-if=\"txStatus == 3\">Updating the page...</span>\n        </button>\n <button\n          class=\"my-button\"\n          :disabled=\"!selectedToken || txStatus != 0\"\n          v-on:click=\"AddPortionToStake\"\n        >\n          <span v-if=\"!shouldDisplayButton1 && selectedToken && !txStatus\">Step 2) Click this to deposit {{ parseFloat(sliderValue2).toFixed(13).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2') }} <img src=\"https://zkbitcoin.org/img/syncswap.png\" alt=\"ethereum\" style=\"width: 25px; height: 25px;\" />LP Tokens to the Staking Contract</span>\n          <span v-else-if=\"!selectedToken\">Select token to pay fee first</span>\n          <span v-else-if=\"txStatus == 1\">Sending tx...</span>\n          <span v-else-if=\"txStatus == 2\"\n            >Waiting until tx is committed...</span\n          >\n          <span v-else-if=\"txStatus == 3\">Updating the page...</span>\n        </button>\n\n\n    <h2>Your Staked LP Tokens are worth {{ (parseInt(ReservesTotal)/1e18* greetingStakeBalance / greetingLPTotal) }} <img src=\"https://zkbitcoin.org/img/ethereum.png\" alt=\"ethereum\" style=\"width: 25px; height: 25px;\" />ETH and {{  (parseInt(ReservesTotal2)/1e18* greetingStakeBalance / greetingLPTotal) }}  <img src=\"https://zkbitcoin.org/img/zkBitcoin.png\" alt=\"zkBitcoin\" style=\"width: 25px; height: 25px;\" />zkBTC</h2>\n\n\n\n    <h2>Your Percent of the Pool {{ (greetingStakeBalance / greetingStakeBalanceTotal).toFixed(4) * 100 }}% </h2>\n     <!--\n    <h2>Your Reward {{  StakeReward }} zkBitcoin 👋</h2>\n    <h2>Your Reward2 {{  StakeReward2 }} 0xBitcoin Tokens 👋</h2>\n    <h2>Your Reward3 {{  StakeReward3 }} Ethereum Tokens 👋</h2> \n    -->\n    <h2>Your Reward {{  (StakeReward/1e18).toFixed(8) }}  <img src=\"https://zkbitcoin.org/img/zkBitcoin.png\" alt=\"zkBitcoin\" style=\"width: 25px; height: 25px;\" />zkBitcoin Tokens </h2>\n    <h2>Your Reward2 {{   (StakeReward2/1e8).toFixed(8) }}  <img src=\"https://zkbitcoin.org/img/0xbitcoin.png\" alt=\"0xBitcoin\" style=\"width: 25px; height: 25px;\" />0xBitcoin Tokens </h2>\n    <h2>Your Reward3 {{   (StakeReward3/1e18).toFixed(8) }} <img src=\"https://zkbitcoin.org/img/ethereum.png\" alt=\"ethereum\" style=\"width: 25px; height: 25px;\" />Ethereum Tokens </h2> \n \n    <button\n          class=\"my-button\"\n          :disabled=\"!selectedToken || txStatus != 0\"\n          v-on:click=\"GetStakingRewardsOnly\"\n        >\n          <span v-if=\"selectedToken && !txStatus\">Claim Staking Rewards Only</span>\n          <span v-else-if=\"!selectedToken\">Select token to pay fee first</span>\n          <span v-else-if=\"txStatus == 1\">Sending tx...</span>\n          <span v-else-if=\"txStatus == 2\"\n            >Waiting until tx is committed...</span\n          >\n          <span v-else-if=\"txStatus == 3\">Updating the page...</span>\n          <span v-else-if=\"retreivingFee\">Updating the fee...</span>\n        </button>\n<br>\n<br>\n<h1>Withdrawing</h1>\n<h3>Total Amount of Staked LP Tokens: {{ parseFloat(MaxsliderValue/1e18).toFixed(12).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2') }} <img src=\"https://zkbitcoin.org/img/syncswap.png\" alt=\"ethereum\" style=\"width: 25px; height: 25px;\" />LP Tokens</h3>\n\n<label for=\"slider\">Slider Value:</label>\n<input\n  type=\"range\"\n  id=\"slider\"\n  name=\"slider\"\n  min=\"0\"\n  :max=\"MaxsliderValue/1e18\"\n  :step=\"MaxsliderValue/1e20\"\n  v-model=\"sliderValue\"\n/>\n\nAdjust below to remove a portion of the LP Tokens\n<h3>Tokens to withdraw: {{ parseFloat(sliderValue).toFixed(12).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2') }} <img src=\"https://zkbitcoin.org/img/syncswap.png\" alt=\"ethereum\" style=\"width: 25px; height: 25px;\" />LP Tokens</h3>\n\n         <button\n          class=\"my-button\"\n          :disabled=\"!selectedToken || txStatus != 0\"\n          v-on:click=\"RemovePortionOfStake\"\n        >\n          <span v-if=\"selectedToken && !txStatus\">Click this to withdraw {{ parseFloat(sliderValue).toFixed(12).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2')}} <img src=\"https://zkbitcoin.org/img/syncswap.png\" alt=\"ethereum\" style=\"width: 25px; height: 25px;\" />LP Tokens to Withdraw</span>\n          <span v-else-if=\"!selectedToken\">Select token to pay fee first</span>\n          <span v-else-if=\"txStatus == 1\">Sending tx...</span>\n          <span v-else-if=\"txStatus == 2\"\n            >Waiting until tx is committed...</span\n          >\n          <span v-else-if=\"txStatus == 3\">Updating the page...</span>\n          <span v-else-if=\"retreivingFee\">Updating the fee...</span>\n        </button>\n\n<br><br>\n\n         <button\n          class=\"my-button\"\n          :disabled=\"!selectedToken || txStatus != 0\"\n          v-on:click=\"ExitOnly\"\n        >\n          <span v-if=\"selectedToken && !txStatus\">Remove All <img src=\"https://zkbitcoin.org/img/syncswap.png\" alt=\"ethereum\" style=\"width: 25px; height: 25px;\" />LP Tokens Staked and Claim Rewards</span>\n          <span v-else-if=\"!selectedToken\">Select token to pay fee first</span>\n          <span v-else-if=\"txStatus == 1\">Sending tx...</span>\n          <span v-else-if=\"txStatus == 2\"\n            >Waiting until tx is committed...</span\n          >\n          <span v-else-if=\"txStatus == 3\">Updating the page...</span>\n          <span v-else-if=\"retreivingFee\">Updating the fee...</span>\n        </button>\n\n\n        <br>\n        <br><br><br><br><h1> Advanced Staking Stuff</h1>\n\n<h1>Advanced Depositing</h1>\n<h3>Deposit for other users</h3>\n \n Ethereum Address to stake LP for:<input class=\"ethereum-address-input\" v-model=\"ethereumAddress\" :style=\"{ width: textBoxWidth }\" :placeholder=\"userAccountsss\">\n\n <h2>Your LP Tokens {{  parseFloat((MaxsliderValue2/1e18)).toFixed(12).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2') }} <img src=\"https://zkbitcoin.org/img/syncswap.png\" alt=\"0xBitcoin\" style=\"width: 25px; height: 25px;\" /> LP Tokens </h2>\n    \n<label for=\"slider\">Slider Value:</label>\n<input\n  type=\"range\"\n  id=\"slider\"\n  name=\"slider\"\n  min=\"0\"\n  :max=\"MaxsliderValue2/1e18\"\n  :step=\"MaxsliderValue2/1e20\"\n  v-model=\"sliderValue2\"\n/>\n\nAdjust below to add a portion of the LP Tokens\n<p>Selected slider value: {{ parseFloat(sliderValue2).toFixed(13).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2') }} </p>\n    222GetPermitAndStakeAdvanced  <button\n          class=\"my-button\"\n          :disabled=\"!selectedToken || txStatus != 0\"\n          v-on:click=\"GetPermitAndStakeAdvanced\"\n        >\n          <span v-if=\"shouldDisplayButton1 && selectedToken && !txStatus\">Click this to permit Approve <img src=\"https://zkbitcoin.org/img/syncswap.png\" alt=\"0xBitcoin\" style=\"width: 25px; height: 25px;\" />  LP Tokens to the Staking <br>and Stake {{ parseFloat(sliderValue2).toFixed(13).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2') }}<img src=\"https://zkbitcoin.org/img/syncswap.png\" alt=\"0xBitcoin\" style=\"width: 25px; height: 25px;\" />  LP Tokens on behalf of {{ethereumAddress.slice(0,6) }}...{{ethereumAddress.slice(-4) }} in <br>one transaction</span>\n          <span v-else-if=\"!selectedToken\">Select token to pay fee first</span>\n          <span v-else-if=\"txStatus == 1\">Sending tx...</span>\n          <span v-else-if=\"txStatus == 2\"\n            >Waiting until tx is committed...</span\n          >\n          <span v-else-if=\"txStatus == 3\">Updating the page...</span>\n        </button>\n\t<button\n          class=\"my-button\"\n          :disabled=\"!selectedToken || txStatus != 0\"\n          v-on:click=\"ApproveLPtoStakeAlert\"\n        >\n          <span v-if=\"shouldDisplayButton1 && selectedToken && !txStatus\"> or Click this to approve {{ parseFloat(sliderValue2).toFixed(13).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2') }} <img src=\"https://zkbitcoin.org/img/syncswap.png\" alt=\"0xBitcoin\" style=\"width: 25px; height: 25px;\" /> LP Tokens to the Staking Contract on behalf of {{ethereumAddress.slice(0,6) }}...{{ethereumAddress.slice(-4) }} in<br> 2 transactions</span>\n          <span v-else-if=\"!selectedToken\">Select token to pay fee first</span>\n          <span v-else-if=\"txStatus == 1\">Sending tx...</span>\n          <span v-else-if=\"txStatus == 2\"\n            >Waiting until tx is committed...</span\n          >\n          <span v-else-if=\"txStatus == 3\">Updating the page...</span>\n        </button>\n <button\n          class=\"my-button\"\n          :disabled=\"!selectedToken || txStatus != 0\"\n          v-on:click=\"AddPortionToStakeAdvanced\"\n        >\n          <span v-if=\"!shouldDisplayButton1 && selectedToken && !txStatus\">Step 2) Click this to deposit {{ parseFloat(sliderValue2).toFixed(13).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2')}} <img src=\"https://zkbitcoin.org/img/syncswap.png\" alt=\"0xBitcoin\" style=\"width: 25px; height: 25px;\" /> LP Tokens to the Staking Contract on behalf of {{ethereumAddress.slice(0,6) }}...{{ethereumAddress.slice(-4) }}</span>\n          <span v-else-if=\"!selectedToken\">Select token to pay fee first</span>\n          <span v-else-if=\"txStatus == 1\">Sending tx...</span>\n          <span v-else-if=\"txStatus == 2\"\n            >Waiting until tx is committed...</span\n          >\n          <span v-else-if=\"txStatus == 3\">Updating the page...</span>\n        </button>\n\n\n\n\n<h1>Advanced Rewards Claiming</h1>\n<h3>Claim rewards for other users</h3>\n \n Ethereum Address to stake LP for:<input class=\"ethereum-address-input\" v-model=\"ethereumAddress2\" :style=\"{ width: textBoxWidth }\" :placeholder=\"userAccountsss\">\n <button\n          class=\"my-button\"\n          :disabled=\"!selectedToken || txStatus != 0\"\n          v-on:click=\"GetStakingRewardsOnlyAdvanced\"\n        >\n          <span v-if=\"selectedToken && !txStatus\">Claim Staking Rewards for</span>\n          <span v-else-if=\"!selectedToken\">Select token to pay fee first</span>\n          <span v-else-if=\"txStatus == 1\">Sending tx...</span>\n          <span v-else-if=\"txStatus == 2\"\n            >Waiting until tx is committed...</span\n          >\n          <span v-else-if=\"txStatus == 3\">Updating the page...</span>\n          <span v-else-if=\"retreivingFee\">Updating the fee...</span>\n        </button>\n<!---\n        <h1>Auction Stuff</h1><br>\nInput ETH to Send:\n<input\n  class=\"form-control\"\n  type=\"number\"\n  id=\"number2\"\n  v-model=\"number2\"\n  :placeholder=\"startEthToSend\"\n  :step=\"StepEthToSend\"\n  :max=\"maxQuantity\"\n  min=0\n/>\n<h1>Total ETH TO SEND Contract is: {{ message }} ETH</h1>\n\n    <h2>Current Era: {{ currentEra }}</h2>\n    <h2>Current Day: {{ greetingAuctionNumber }}</h2>\n    <h2>Current Auction Total: {{ parseFloat(currentAuctionTotal / 1e18).toFixed(18).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2') }} Ethereum</h2>\n    <h2>Current Auction Your Total: {{ parseFloat(UserTotal / 1e18).toFixed(18).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2') }} Ethereum</h2>\n    <h2>Your Percent of Current Auction: {{ (!isNaN(UserTotal / currentAuctionTotal) ? (UserTotal / currentAuctionTotal * 100).toFixed(3) : 0) }}% </h2>\n    <h2>Auction LENGTH: {{ (AuctionLengthInHours) }} Seconds</h2>\n    <h2>Time Left in Auction: {{ (NextDayTime * 1.00).toFixed(3) }} Hours</h2>\n    <h2>Auction % Remaining: {{((100* NextDayTime/(AuctionLengthInHours/(60*60)))).toFixed(2) }} %</h2>\n    <h3>With your current bids you will recieve {{ (!isNaN(UserTotal / currentAuctionTotal) ? (UserTotal / currentAuctionTotal * 32768).toFixed(3) : 0) }} zkBitcoin, if no other bids are cast and the auction ends with a dust bid.</h3>\n   <h3>If you bid {{number2}} Ethereum you will recieves {{ (( (parseFloat(number2)+parseFloat(UserTotal)/1e18)) / (parseFloat(currentAuctionTotal)/1e18+(parseFloat(number2))) * 32768).toFixed(5) }} zkBitcoin, if you bid {{ number2 }} Ethereum below and if the auction ends with a dust bid.</h3>\n    <div>\n      This a simple dApp, which you can choose the amount of ETH you want to bid at auction for ZKBitcoin Tokens.\n    </div>\n    Input ETH TO SEND: <input class=\"form-control\" type=\"number\" id=\"number2\" v-model=\"number2\" placeholder=\"0.01\" :step=\"StepEthToSend\" :max=\"maxQuantity\" min=0>\n    <h1>Total ETH TO SEND Contract is: {{ message }} ETH</h1>\n  --><!--  <p>Message2 is: {{ message21 }}</p>\n    <button @click=\"SetMessage\">Set message</button>\n\n    <input type=\"text\" id=\"name2\" v-model=\"name2\" placeholder=\"edit me\" />\n      -->\n    <div class=\"main-box\">\n<!--\n    <div class=\"balance\" v-if=\"selectedToken\">\n        <p>\n          Your ETH Account: <span v-if=\"retreivingBalance2\">Loading...</span>\n          <span v-else>{{ userAccountsss }} </span>\n        </p>\n        <p>\n          Your ETH: <span v-if=\"retreivingBalance\">Loading...</span>\n          <span v-else>{{ currentBalance }} {{ selectedToken.symbol }}</span>\n        </p>\n        <p>\n          Expected fee: <span v-if=\"retreivingFee\">Loading...</span>\n          <span v-else>{{ currentFee }} {{ selectedToken.symbol }}</span>\n          <button class=\"refresh-button\" v-on:click=\"updateFee\">Refresh</button>\n        </p>\n      </div>        \n      <button\n          class=\"my-button5\"\n          :disabled=\"!selectedToken || txStatus != 0\"\n          v-on:click=\"sendETHtoAuction\"\n        >\n          <span v-if=\"selectedToken && !txStatus\">Bid {{ number2 }} ETH on the Current Auction</span>\n          <span v-else-if=\"!selectedToken\">Select token to pay fee first</span>\n          <span v-else-if=\"txStatus == 1\">Sending tx...Bid of {{ number2 }} ETH</span>\n          <span v-else-if=\"txStatus == 2\"\n            >Waiting until tx is committed...</span\n          >\n          <span v-else-if=\"txStatus == 3\">Updating the page...</span>\n          <span v-else-if=\"retreivingFee\">Updating the fee...</span>\n        </button>\n<h2>You can claim: {{ CLAIM_AMOUNT/1e18 }} zkBitcoin Tokens from auctions</h2>\n <h2>You can {{ GreetingDaysToWithdrawArray }} get GreetingDaysToWithdrawArray to be the array needed for the withdrawlDays abi then</h2>\n      <button\n          class=\"my-button\"\n          :disabled=\"!selectedToken || txStatus != 0\"\n          v-on:click=\"sendETHtoAuction2\"\n        >\n          <span v-if=\"selectedToken && !txStatus\">Claim zkBitcoin from Auctions</span>\n          <span v-else-if=\"!selectedToken\">Select token to pay fee first</span>\n          <span v-else-if=\"txStatus == 1\">Sending tx...</span>\n          <span v-else-if=\"txStatus == 2\"\n            >Waiting until tx is committed...</span\n          >\n          <span v-else-if=\"txStatus == 3\">Updating the page...</span>\n          <span v-else-if=\"retreivingFee\">Updating the fee...</span>\n        </button>\n     \n    <button @click=\"changeTokenETH\">Change token</button>\n      <div>\n        Select token:\n        <select v-model=\"selectedTokenAddress\" v-on:change=\"changeToken\">\n          <option\n            v-for=\"token in tokens\"\n            v-bind:value=\"token.address\"\n            v-bind:key=\"token.address\"\n          >\n            {{ token.symbol }}\n          </option>\n        </select>\n      </div>\n      <div class=\"balance\" v-if=\"selectedToken\">\n        <p>\n          Balance: <span v-if=\"retreivingBalance\">Loading...</span>\n          <span v-else>{{ currentBalance }} {{ selectedToken.symbol }}</span>\n        </p>\n        <p>\n          Expected fee: <span v-if=\"retreivingFee\">Loading...</span>\n          <span v-else>{{ currentFee }} {{ selectedToken.symbol }}</span>\n          <button class=\"refresh-button\" v-on:click=\"updateFee\">Refresh</button>\n        </p>\n      </div>\n      -->\n\n<!---\n      <br><br>Fun Command, change the greeting on top of webpage\n      <div class=\"greeting-input\">\n        <input\n          v-model=\"newGreeting\"\n          :disabled=\"!selectedToken || txStatus != 0\"\n          placeholder=\"Write new greeting here...\"\n        />\n\n        <button\n          class=\"change-button\"\n          :disabled=\"!selectedToken || txStatus != 0\"\n          v-on:click=\"changeGreeting\"\n        >\n          <span v-if=\"selectedToken && !txStatus\">Change greeting</span>\n          <span v-else-if=\"!selectedToken\">Select token to pay fee first</span>\n          <span v-else-if=\"txStatus == 1\">Sending tx...</span>\n          <span v-else-if=\"txStatus == 2\"\n            >Waiting until tx is committed...</span\n          >\n          <span v-else-if=\"txStatus == 3\">Updating the page...</span>\n          <span v-else-if=\"retreivingFee\">Updating the fee...</span>\n        </button>\n\n<br>\n      </div>--->\n    </div>\n    <br><br>\n\n\n\n\n\n\n<br><br>\n<!---\n<h1> Advanced Auctions - Bid in the future or on multiple auctions at once!!! </h1>\n\n\n<br>\n\n  <div>\n    <label for=\"era\">Era:</label>\n    <input v-model=\"era\" type=\"number\" id=\"era\" :min=\"this.currentEra\" max=\"15\" class=\"larger-input\" />\n<br>\n    <label for=\"day\">Starting Auction #:</label>\n    <input v-model=\"StartingDay\" type=\"number\" id=\"StartingDay\" :placeholder=\"greetingAuctionNumber\" min=\"1\" class=\"larger-input\"/>\n<br>\n    <label for=\"amountOfDays\">Number of auctions to bid on:</label>\n    <input v-model=\"amountOfDays\" type=\"number\" id=\"amountOfDays\" min=\"1\" class=\"larger-input\"/>\n<br>\n  </div>\n <h1>{{ headerText }}</h1>\n<h3>Bid {{ (number2/amountOfDays) }} ETH on each of the {{ amountOfDays }} auctions in Era #{{era}} for a total of {{ number2 }} ETH</h3>\n<h3>The current Era # is {{ currentEra }} and the current Auction # is {{ greetingAuctionNumber }}</h3>\n<input\n  class=\"form-control\"\n  type=\"number\"\n  id=\"number2\"\n  v-model=\"number2\"\n  :placeholder=\"startEthToSend\"\n  :step=\"StepEthToSend\"\n  :max=\"maxQuantity\"\n  min=0\n/>\n<br>\n\n    <button\n          class=\"my-button\"\n          :disabled=\"!selectedToken || txStatus != 0\"\n          v-on:click=\"sendETHtoAuctionAdvanced\"\n        >\n          <span v-if=\"selectedToken && !txStatus\">Advanced Auction: {{headerText }}</span>\n          <span v-else-if=\"!selectedToken\">Select token to pay fee first</span>\n          <span v-else-if=\"txStatus == 1\">Sending tx... {{ headerText }}</span>\n          <span v-else-if=\"txStatus == 2\"\n            >Waiting until tx is committed...</span\n          >\n          <span v-else-if=\"txStatus == 3\">Updating the page...</span>\n          <span v-else-if=\"retreivingFee\">Updating the fee...</span>\n        </button>\n<br><br><br>\n\n\n\n\n\n\n\n\n\n\n---> \n\n<!---\n    Get Test LP Tokens to Test Staking Contract Here\n<br>\n        <button\n          class=\"my-button\"\n          :disabled=\"!selectedToken || txStatus != 0\"\n          v-on:click=\"GetFreeLPTokens\"\n        >\n          <span v-if=\"selectedToken && !txStatus\">Get Test LP Tokens to test Staking Contract</span>\n          <span v-else-if=\"!selectedToken\">Select token to pay fee first</span>\n          <span v-else-if=\"txStatus == 1\">Sending tx...</span>\n          <span v-else-if=\"txStatus == 2\"\n            >Waiting until tx is committed...</span\n          >\n          <span v-else-if=\"txStatus == 3\">Updating the page...</span>\n          <span v-else-if=\"retreivingFee\">Updating the fee...</span>\n        </button>\n        <br>\n---> \n<h1>  <a :href=\"URL_LP_CONTRACT_ADDRESS2\">Get Test LP Tokens to Test Staking Contract Here</a></h1>\n\n   <br><br>\n    Get Test 0xBitcoin Token   to Test Staking Contract (by sending it some 0xBitcoin as a reward to test the payout)\n<br>\n        <button\n          class=\"my-button\"\n          :disabled=\"!selectedToken || txStatus != 0\"\n          v-on:click=\"GetFreeLPTokens2\"\n        >\n          <span v-if=\"selectedToken && !txStatus\">Get Test 0xBitcoin Tokens to test sending Rewards Contract some to test rewards</span>\n          <span v-else-if=\"!selectedToken\">Select token to pay fee first</span>\n          <span v-else-if=\"txStatus == 1\">Sending tx...</span>\n          <span v-else-if=\"txStatus == 2\"\n            >Waiting until tx is committed...</span\n          >\n          <span v-else-if=\"txStatus == 3\">Updating the page...</span>\n          <span v-else-if=\"retreivingFee\">Updating the fee...</span>\n        </button>\n        <br>\n      <h2>Staking New Period Starts at: {{ (StakingNewPeriod) }} seconds</h2>\n      <h2>Current Timestamp Start at: {{ (CurrentTimestamp) }} seconds</h2>\n    \n        <br>Start New 25 Day Staking Period\n        <button\n          class=\"change-button\"\n          :disabled=\"!selectedToken || txStatus != 0 || parseFloat(StakingNewPeriod) > parseFloat(CurrentTimestamp)\"\n          v-on:click=\"initilizeNewStakingPeriod\"\n        >\n          <span v-if=\"selectedToken && !txStatus\">initilizeNewStakingPeriod</span>\n          <span v-else-if=\"!selectedToken\">Select token to pay fee first</span>\n          <span v-else-if=\"txStatus == 1\">Sending tx...</span>\n          <span v-else-if=\"txStatus == 2\"\n            >Waiting until tx is committed...</span\n          >\n          <span v-else-if=\"txStatus == 3\">Updating the page...</span>\n          <span v-else-if=\"retreivingFee\">Updating the fee...</span>\n        </button>\n        \n<br><br>\n<!---\n<h1>Testing Permit</h1>\n  <button\n          class=\"my-button\"\n          :disabled=\"!selectedToken || txStatus != 0\"\n          v-on:click=\"GetPermitData\"\n        >\n          <span v-if=\"selectedToken && !txStatus\">Permit Data Test</span>\n          <span v-else-if=\"!selectedToken\">Select token to pay fee first</span>\n          <span v-else-if=\"txStatus == 1\">Sending tx...</span>\n          <span v-else-if=\"txStatus == 2\"\n            >Waiting until tx is committed...</span\n          >\n          <span v-else-if=\"txStatus == 3\">Updating the page...</span>\n          <span v-else-if=\"retreivingFee\">Updating the fee...</span>\n        </button>\n <button\n          class=\"my-button\"\n          :disabled=\"!selectedToken || txStatus != 0\"\n          v-on:click=\"Permit2\"\n        >\n          <span v-if=\"selectedToken && !txStatus\">Permit Test</span>\n          <span v-else-if=\"!selectedToken\">Select token to pay fee first</span>\n          <span v-else-if=\"txStatus == 1\">Sending tx...</span>\n          <span v-else-if=\"txStatus == 2\"\n            >Waiting until tx is committed...</span\n          >\n          <span v-else-if=\"txStatus == 3\">Updating the page...</span>\n          <span v-else-if=\"retreivingFee\">Updating the fee...</span>\n        </button>\n\n<br> <button\n          class=\"my-button\"\n          :disabled=\"!selectedToken || txStatus != 0\"\n          v-on:click=\"GetPermitAndStake\"\n        >\n          <span v-if=\"selectedToken && !txStatus\">GetPermitAndStake</span>\n          <span v-else-if=\"!selectedToken\">Select token to pay fee first</span>\n          <span v-else-if=\"txStatus == 1\">Sending tx...</span>\n          <span v-else-if=\"txStatus == 2\"\n            >Waiting until tx is committed...</span\n          >\n          <span v-else-if=\"txStatus == 3\">Updating the page...</span>\n          <span v-else-if=\"retreivingFee\">Updating the fee...</span>\n        </button>\n--->\n<br>\n\n        Contracts Listed below<br>\n           <h2>zkBitcoin Contract: {{ (zkBTC_CONTRACT_ADDRESS2) }}  <a :href=\"URL_zkBTC_CONTRACT_ADDRESS2\" target=\"_blank\">Go to zkSyncScan Explorer for zkBitcoin Contract Here</a></h2> \n           <h2>Auctions Contract: {{ (AUCTION_CONTRACT_ADDRESS2) }}  <a :href=\"URL_AUCTION_CONTRACT_ADDRESS2\" target=\"_blank\">Go to zkSyncScan Explorer for Auction Contract Here</a></h2> \n           <h2>0xBitcoin Contract: {{ (ZeroxBitcoin_addresss2) }} <a :href=\"URL_0xBTC_CONTRACT_ADDRESS2\" target=\"_blank\">Go to zkSyncScan Explorer for 0xBTC Contract Here</a> </h2>\n            <h2>LP Contract: {{ (LP_CONTRACT_ADDRESS2) }}  <a :href=\"URL_LP_CONTRACT_ADDRESS2\">Get LP #1 Tokens to by Deposit/Withdraw on Contract #1 Here</a></h2> \n            <h2>Staking Contract: {{ (Staking_zkBTC_CONTRACT_ADDRESS2) }}  <a :href=\"URL_Staking_zkBTC_CONTRACT_ADDRESS2\" target=\"_blank\">Go to zkSyncScan Explorer for Staking #1 Contract Here</a></h2> \n           <h2>LP #2 Contract: {{ (LP_SECOND_CONTRACT_ADDRESS2) }} <a :href=\"URL_LP_SECOND_CONTRACT_ADDRESS2\">Get LP #2 Tokens to by Deposit/Withdraw on Contract #2 Here</a></h2> \n           <h2>Staking Contract #2: {{ (LP_SECOND_STAKING_CONTRACT_ADDRESS2) }} <a :href=\"URL_Staking_SECOUND_zkBTC_CONTRACT_ADDRESS2\" target=\"_blank\">Go to zkSyncScan Explorer for Staking #2 Contract Here</a> </h2>\n           \n           <h3>Changes needed for mainnet, we need to not allow adjustDiff in zkBitcoin</h3>\n  \n\nThese are admin functions below\n<br><br>\n\n        <button\n          class=\"change-button\"\n          :disabled=\"!selectedToken || txStatus != 0\"\n          v-on:click=\"initilizeABAS\"\n        >\n          <span v-if=\"selectedToken && !txStatus\">ABAS initilize</span>\n          <span v-else-if=\"!selectedToken\">Select token to pay fee first</span>\n          <span v-else-if=\"txStatus == 1\">Sending tx...</span>\n          <span v-else-if=\"txStatus == 2\"\n            >Waiting until tx is committed...</span\n          >\n          <span v-else-if=\"txStatus == 3\">Updating the page...</span>\n          <span v-else-if=\"retreivingFee\">Updating the fee...</span>\n        </button>\n2nd\n\n        <button\n          class=\"change-button\"\n          :disabled=\"!selectedToken || txStatus != 0\"\n          v-on:click=\"initilizeAuction\"\n        >\n          <span v-if=\"selectedToken && !txStatus\">InitilizeAuction</span>\n          <span v-else-if=\"!selectedToken\">Select token to pay fee first</span>\n          <span v-else-if=\"txStatus == 1\">Sending tx...</span>\n          <span v-else-if=\"txStatus == 2\"\n            >Waiting until tx is committed...</span\n          >\n          <span v-else-if=\"txStatus == 3\">Updating the page...</span>\n          <span v-else-if=\"retreivingFee\">Updating the fee...</span>\n        </button>\n        <br>\n\n\n\n\n\n<h1> Pool Extra Stats </h1>\n   \n<h1>LP Tokens Total Supply {{ parseFloat( (parseInt(greetingLPTotal)/1e18)).toFixed(18).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2') }} LP Tokens</h1>\n\n  <h2>Pool is worth {{ parseFloat( (parseInt(ReservesTotal)/1e18)).toFixed(12).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2') }} ETH and {{  parseFloat( (parseInt(ReservesTotal2)/1e18)).toFixed(12).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2') }} zkBTC </h2>\n  \n    <h2>Total ETH in Pool = {{ parseFloat( (parseInt(ReservesTotal)/1e18)).toFixed(12).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2') }} ETH </h2>\n\n    <h2>Total zkBitcoin in Pool = {{  parseFloat( (parseInt(ReservesTotal2)/1e18)).toFixed(12).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2') }} zkBTC </h2>\n\n<h1> Percent of Total Liquidity Staked for Pool {{ (greetingStakeBalanceTotal / greetingLPTotal*100 ).toFixed(4) }} % </h1>\n\n\n    <h2>Your Total ETH in Pool ={{ parseFloat( (parseInt(ReservesTotal)/1e18* greetingStakeBalance / greetingLPTotal) ).toFixed(12).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2')       }} ETH </h2>\n\n    <h2>Your Total zkBitcoin in Pool = {{ parseFloat( (parseInt(ReservesTotal2)/1e18* greetingStakeBalance / greetingLPTotal) ).toFixed(12).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2') }} zkBTC </h2>\n \n\t<h2>Your Balance of LP Tokens in Staking Contract {{  parseFloat( greetingStakeBalance/ 1e18 ).toFixed(12).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2') }} </h2>\n    <h2>Total Balance of LP Tokens in Staking Contract {{  parseFloat( greetingStakeBalanceTotal/ 1e18 ).toFixed(12).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2') }} </h2>\n    <h2>Your Approved LP Tokens for Contract {{  parseFloat( ApprovedLPforContract/ 1e18 ).toFixed(12).replace(/(\\.0+|(?:(\\.\\d+?)0+)(?=\\D|$))$/, '$2') }} Approved LP Tokens</h2>\n\n\n\n  </div>\n  <div id=\"app\" v-else>\n\n    <Header />\n    <div class=\"start-screen\">\n      \n    <h1>Download Testnet Miner for zkBitcoin @ <a href=\"https://github.com/ZKBitcoinToken/zkBTC-Testnet-Mainnet-Almost\">Click here to download Windows GPU and CPU Miner</a></h1>\n      <h1>Get ZK Sync Testnet ETH @ <a href=\"https://faucet.triangleplatform.com/zksync/testnet?\">CLICK HERE TO GO TO ETH FAUCET</a></h1>\n      <h1>Add ZK Sync Testnet to Your Metamask @  <a href=\"https://chainlist.org/chain/280\">CLICK HERE TO ADD ZK SYNC TESTNET TO METAMASK</a></h1>\n      <h1>Welcome to the Ethereum Staking dAPP for zkBitcoin! Connect Metamask Below to enter</h1>\n      \n      <button v-on:click=\"connectMetamask\" style=\"font-size: 28px; padding: 10px 20px;\">Connect Metamask By clicking here</button> \n      <h1>Enter Discord @  <a href=\"https://discord.gg/FwXGz5PvjF\">CLICK HERE TO GO TO DISCORD</a></h1>\n       <br><br><br><br>\n        Contracts Listed below<br>\n           <h2>zkBitcoin Contract: {{ (zkBTC_CONTRACT_ADDRESS2) }}  <a :href=\"URL_zkBTC_CONTRACT_ADDRESS2\" target=\"_blank\">Go to zkSyncScan Explorer for zkBitcoin Contract Here</a></h2> \n           <h2>Auctions Contract: {{ (AUCTION_CONTRACT_ADDRESS2) }}  <a :href=\"URL_AUCTION_CONTRACT_ADDRESS2\" target=\"_blank\">Go to zkSyncScan Explorer for Auction Contract Here</a></h2> \n           <h2>0xBitcoin Contract: {{ (ZeroxBitcoin_addresss2) }} <a :href=\"URL_0xBTC_CONTRACT_ADDRESS2\" target=\"_blank\">Go to zkSyncScan Explorer for 0xBTC Contract Here</a> </h2>\n            <h2>LP Contract: {{ (LP_CONTRACT_ADDRESS2) }}  <a :href=\"URL_LP_CONTRACT_ADDRESS2\">Get LP #1 Tokens to by Deposit/Withdraw on Contract #1 Here</a></h2> \n            <h2>Staking Contract: {{ (Staking_zkBTC_CONTRACT_ADDRESS2) }}  <a :href=\"URL_Staking_zkBTC_CONTRACT_ADDRESS2\" target=\"_blank\">Go to zkSyncScan Explorer for Staking #1 Contract Here</a></h2> \n           <h2>LP #2 Contract: {{ (LP_SECOND_CONTRACT_ADDRESS2) }} <a :href=\"URL_LP_SECOND_CONTRACT_ADDRESS2\">Get LP #2 Tokens to by Deposit/Withdraw on Contract #2 Here</a></h2> \n           <h2>Staking Contract #2: {{ (LP_SECOND_STAKING_CONTRACT_ADDRESS2) }} <a :href=\"URL_Staking_SECOUND_zkBTC_CONTRACT_ADDRESS2\" target=\"_blank\">Go to zkSyncScan Explorer for Staking #2 Contract Here</a> </h2>\n           \n           <h3>Changes needed for mainnet, BLOCKS_PER_ADJUSTMENT needs to be changed from 16 to 1024</h3>\n           <h3>Changes needed for mainnet, Auction length needs to be 15 days instead of 10 minutes</h3>\n    </div>\n  </div>\n</template>\n\n  <script src=\"https://bundle.run/buffer@6.0.3\"></script>\n<script>\nimport Header from './Header.vue';\n\nimport Web3 from 'web3';\nimport {} from \"zksync-web3\";\nimport {} from \"ethers\";\nimport { Contract, Web3Provider, Provider } from \"zksync-web3\";\nimport { ethers , BigNumber, utils } from \"ethers\";\n\n// eslint-disable-next-line\n// eslint-disable-next-line\nconst GREETER_CONTRACT_ABI = require(\"./abi.json\"); // TODO: Complete and import the ABI\nconst ABAS_CONTRACT_ABI = require(\"./abasabi.json\")\n\nconst AUCTION_CONTRACT_ABI = require(\"./auctionabi.json\");\n\nconst LP_CONTRACT_ABI = require(\"./LPFaucetToken.json\");\n\nconst ETH_L1_ADDRESS = \"0x0000000000000000000000000000000000000000\";\nconst allowedTokens = require(\"./eth.json\");\nconst Staking_AbAS_CONTRACT_ABI = require(\"./abasStakingABI.json\");\n\nconst ZeroxBitcoin__CONTRACT_ABI = require(\"./LPFaucetToken.json\");\n\nconst GREETER_CONTRACT_ADDRESS = \"0xf5ADD0c27C4a15690f48F54E2D64cD72E204b6Ad\"; // TODO: Add smart contract address\n\n\n\n\n//FOR ETH POOL and Auctions only Main Contracts Below\nconst LP_CONTRACT_ADDRESS = \"0xe21010cdA483ac1Ae6375e5D50dB2293307C4b60\"\nconst Staking_zkBTC_CONTRACT_ADDRESS = \"0xE673c6EB8Fa1E8F1E6b09E29F473237F90C837b8\"\nconst zkBTC_CONTRACT_ADDRESS = \"0xEF6270349FdEC3664854a86F977a6276089824a4\"\nconst ZeroxBitcoin_addresss = \"0xa0E1d12603EA3E256aA52AaB96271e97dC66ED7a\"\nconst AUCTION_CONTRACT_ADDRESS = \"0x470ecC269dE29ed2d801ef02c4c95F6e107a64B5\"\n\n//SECOND STAKING ADDRESS\nconst LP_SECOND_CONTRACT_ADDRESS = \"0xBA6d9490927F71069c676f251060913b095a5741\"\nconst LP_SECOND_STAKING_CONTRACT_ADDRESS = \"0x5Dfa53ee580ccA7F355b626bED1b1Ed0a6383E57\"\n\n\n\n\n\n\n\n\n\n\nconst PERMIT_ADDRESS = LP_CONTRACT_ADDRESS;\n\nconst PERMIT_CONTRACT_ABI = require(\"./PermitABI.json\");\n\nconsole.log(\"PERMIT_addRESS\", PERMIT_ADDRESS);\nconsole.log(\"PERMIT_CONTRACT_ABI\", PERMIT_CONTRACT_ABI);\nconsole.log(\"TEST\", AUCTION_CONTRACT_ABI);\nconsole.log(\"22222\", AUCTION_CONTRACT_ADDRESS);\nconsole.log(\"TEST\", ABAS_CONTRACT_ABI);\nconsole.log(\"Staking_AbAS_CONTRACT_ABI\", Staking_AbAS_CONTRACT_ABI);\nconsole.log(\"Staking_zkBTC_CONTRACT_ADDRESS\", Staking_zkBTC_CONTRACT_ADDRESS);\nconsole.log(\"LP_CONTRACT_ADDRESS\", LP_CONTRACT_ADDRESS);\nconsole.log(\"LP_CONTRACT_ABI\", LP_CONTRACT_ABI);\nexport default {\n  name: \"App\",\n  data() {\n    return {\n\n        textBoxWidth: '90%', \ngreetingLPTotal: 0,\nReservesTotal2: 0,\nReservesTotal: 0,\n\nethereumAddress2: \"0x000123\",\n  ethereumAddress: \"0x000123\",\n        zkBTC_CONTRACT_ADDRESS2: \"\",\n        LP_CONTRACT_ADDRESS2: \"\",\n        URL_LP_CONTRACT_ADDRESS2: \"\",\n        URL_Staking_zkBTC_CONTRACT_ADDRESS2: \"\",\n        URL_zkBTC_CONTRACT_ADDRESS2: \"\",\n        URL_Staking_zkBTC_0xBTC_CONTRACT_ADDRESS2: \"\",\n        URL_AUCTION_CONTRACT_ADDRESS2: \"\",\n        URL_0xBTC_CONTRACT_ADDRESS2: \"\",\n        URL_LP_SECOND_CONTRACT_ADDRESS2: \"\",\n        URL_Staking_SECOUND_zkBTC_CONTRACT_ADDRESS2: \"\",\n        LP_SECOND_STAKING_CONTRACT_ADDRESS2: \"\",\n        LP_SECOND_CONTRACT_ADDRESS2: \"\",\n        ZeroxBitcoin_addresss2: \"\",\n        AUCTION_CONTRACT_ADDRESS2: \"\",\n        Staking_zkBTC_CONTRACT_ADDRESS2: \"\",\n        GREETER_CONTRACT_ADDRESS2: \"\",\n      userAccountsss: \"\",\n      StartingDay: 1,\n      era: 1,\n      amountOfDays: 1,\n      Permit_nonce: 0,\n      Permit_r: 0,\n      Permit_s: 0,\n      Permit_v: 0,\n      name2: '',\n      number2: 0.01,\n      CLAIM_AMOUNT: 0.01,\n      maxQuantity: 0,\n      message: 0.01,\n      newGreeting: \"\",\n      AuctionLengthInHours: 24,\n      greeting: \"unknown\",\n      greetingStakeBalance: \"staking\",\n      StakeReward: \"staking\",\n      startEthToSend: 0.0013,\n      StepEthToSend: 0.012,\n      CurrentTimestamp: 123,\n      StakeReward2: \"staking\",\n      StakeReward3: \"staking\",\n      ApprovedLPforContract: 0.0,\n      greetingStakeBalanceTotal: \"Total Supply\",\n      tokens: allowedTokens,\n      showButton: true,\n      selectedToken: null,\n      StakingNewPeriod: 12345,\n      selectedTokenAddress: \"\",\n      sliderValue: 0.00,\n      MaxsliderValue: 0.01,\n      sliderStep: 0.01,\n      sliderStep2: 0.01,\n      sliderValue2: 0.00,\n      MaxsliderValue2: 0.01,\n      mainLoading: true,\n      provider: null,\n      signer: null,\n      contract: null,\n      canSubmit: true,\n      runningNow: false,\n      runningNowAlertOnce: false,\n      // 0 stands for no status, i.e no tx has been sent\n      // 1 stands for tx is beeing submitted to the operator\n      // 2 stands for tx awaiting commit\n      // 3 stands for updating the balance and greeting on the page\n      txStatus: 0,\n      retreivingFee: false,\n      retreivingBalance: false,\n\n      currentBalance: \"\",\n      currentFee: \"\",\n    };\n  },created() {\n    this.changeTokenETH(); // call your function here\n  },\n  components: {\n    Header,\n  },\n  computed: {\n    shouldDisplayButton1() {\n      // Adjust this condition based on your requirement\n      return this.sliderValue2 >= this.ApprovedLPforContract/1e18;\n\n    },adjustedDays() {\n      const totalDays = parseInt(this.amountOfDays) + parseInt(this.StartingDay);\n\n      if (totalDays > 151) {\n        return 151 - this.StartingDay;\n      } else {\n        return this.amountOfDays;\n      }\n    },adjustedDays2() {\n      const totalDays = parseInt(this.amountOfDays) + parseInt(this.StartingDay);\n\n      if (totalDays > 151) {\n        return 151 - this.amountOfDays;\n      } else {\n        return this.StartingDay;\n      }\n    },headerText() {\n      const startingDay = parseInt(this.StartingDay);\n      const endDay = startingDay + parseInt(this.amountOfDays) - 1;\n\n      if (parseInt(this.amountOfDays) == 1) {\n        return `Send ${this.number2} ETH to bid for ${this.amountOfDays} auction. For Era #${this.era} Auction #${startingDay}`;\n      } else {\n        return `Send ${this.number2} ETH to bid for ${this.amountOfDays} auctions. For Era #${this.era} Auctions #${startingDay} - #${endDay}`;\n      }\n    },\n  },\n  watch: {\n    name2(newValue){\n      this.message21 = newValue;\n      console.log(\"NEW VALUE\", newValue);\n    },\n    number2(newValue){\n      this.message = newValue;\n      console.log(\"NEW VALUE2\", newValue);\n    },StartingDay: 'debouncedAdjustDays',\n    amountOfDays: 'adjustDays',\nera: 'adjustDays2',\n  },mounted() {\n  // Set the interval (in milliseconds)\n\n  const interval = 10000; // 10 seconds\nconst myTimeout = setTimeout(() => {\n  // Your timeout logic here\n\n      if (window.ethereum.networkVersion == 280 ) {\n          this.runningNow = true;\n            this.loadMainScreen();\n           // Start the loop\n          console.log(\"NEW VALUE this.loopId\", this.loopId);\n          this.loopId = setInterval(this.ONEloadMainScreen22, interval);\n\n     }\n\n}, 1500); // 1 second timeout\n\n        this.zkBTC_CONTRACT_ADDRESS2 = zkBTC_CONTRACT_ADDRESS;\n        this.LP_CONTRACT_ADDRESS2 = LP_CONTRACT_ADDRESS;\n        this.URL_LP_CONTRACT_ADDRESS2 = \"https://syncswap.xyz/pool/\"+LP_CONTRACT_ADDRESS;\n        this.URL_Staking_zkBTC_CONTRACT_ADDRESS2 = \"https://goerli.explorer.zksync.io/address/\"+Staking_zkBTC_CONTRACT_ADDRESS+\"#contract\";\n        this.URL_zkBTC_CONTRACT_ADDRESS2 = \"https://goerli.explorer.zksync.io/address/\"+zkBTC_CONTRACT_ADDRESS+\"#contract\";\n        this.URL_Staking_zkBTC_0xBTC_CONTRACT_ADDRESS2 = \"https://goerli.explorer.zksync.io/address/\"+LP_SECOND_STAKING_CONTRACT_ADDRESS+\"#contract\";\n        this.URL_AUCTION_CONTRACT_ADDRESS2 = \"https://goerli.explorer.zksync.io/address/\"+AUCTION_CONTRACT_ADDRESS+\"#contract\";\n        this.URL_0xBTC_CONTRACT_ADDRESS2 =  \"https://goerli.explorer.zksync.io/address/\"+ZeroxBitcoin_addresss+\"#contract\";\n        this.URL_LP_SECOND_CONTRACT_ADDRESS2 = \"https://syncswap.xyz/pool/\"+LP_SECOND_CONTRACT_ADDRESS;\n        this.URL_Staking_SECOUND_zkBTC_CONTRACT_ADDRESS2 = \"https://goerli.explorer.zksync.io/address/\"+LP_SECOND_STAKING_CONTRACT_ADDRESS+\"#contract\";\n        this.LP_SECOND_STAKING_CONTRACT_ADDRESS2 = LP_SECOND_STAKING_CONTRACT_ADDRESS;\n        this.LP_SECOND_CONTRACT_ADDRESS2 = LP_SECOND_CONTRACT_ADDRESS;\n        this.ZeroxBitcoin_addresss2 = ZeroxBitcoin_addresss\n        this.AUCTION_CONTRACT_ADDRESS2 =AUCTION_CONTRACT_ADDRESS;\n        this.Staking_zkBTC_CONTRACT_ADDRESS2 =Staking_zkBTC_CONTRACT_ADDRESS;\n        this.GREETER_CONTRACT_ADDRESS2 =GREETER_CONTRACT_ADDRESS;\n\n\n\n},\n  methods: {\n    SetMessage(){\n      this.message21=this.message;\n    },adjustDays() {\nconsole.log(\"this.amountOfDays\", this.amountOfDays);\nconsole.log(\"this.StartingDay\", this.StartingDay);\n      const totalDays = parseInt(this.amountOfDays) + parseInt(this.StartingDay);\n\nconsole.log(\"this.totalDays\", totalDays);\n      if (totalDays > 151) {\n        this.amountOfDays = 151 - this.StartingDay;\n      }\n    },adjustDays2() {\nconsole.log(\"this.amountOfDays\", this.amountOfDays);\nconsole.log(\"this.StartingDay\", this.StartingDay);\n      const totalDays = parseInt(this.amountOfDays) + parseInt(this.StartingDay);\n\nconsole.log(\"this.totalDays\", totalDays);\nconsole.log(\"this.era\", this.era);\n      if(parseInt(this.era) > parseInt(15)){\n            this.era = 15;\n      }\n      if(parseInt(this.currentEra) < parseInt(this.era)){\n            if (totalDays > 151) {\n                  this.StartingDay = 151 - this.amountOfDays;\n            }\n      }else if(parseInt(this.era) == parseInt(this.currentEra)){\n            if (totalDays > 151 && parseInt(this.greetingAuctionNumber) < 150 ) {\n                  this.StartingDay = parseInt(this.greetingAuctionNumber);\n                  this.amountOfDays = 151 - parseInt(this.StartingDay);\n            }else if(parseInt(this.StartingDay) < parseInt(this.greetingAuctionNumber)){\nconsole.log(\"DOES THIS THING\", this.StartingDay);\n                  this.StartingDay = parseInt(this.greetingAuctionNumber);\n                  \nconsole.log(\"DOES THIS THING2\",  this.amountOfDays);\n            }else{\nconsole.log(\"DOES THIS THING\", this.StartingDay);\n                  this.StartingDay = parseInt(this.greetingAuctionNumber);\n                  \nconsole.log(\"DOES THIS THING2\",  this.amountOfDays);\n            }\n\t}else{\n\t\tthis.era = this.currentEra;\n\t}\n    },\n    debouncedAdjustDays() {\n      clearTimeout(this.debounceTimeout);\n\n      // Debounce the adjustment for 500 milliseconds (adjust as needed)\n      this.debounceTimeout = setTimeout(() => {\n        this.adjustDays2();\n      }, 500);\n    },\n    initializeProviderAndSigner() {\n    this.provider = new Provider('https://mainnet.era.zksync.io');\n    // Note that we still need to get the Metamask signer\n    this.signer = (new Web3Provider(window.ethereum)).getSigner();\n    this.contract = new Contract(\n        GREETER_CONTRACT_ADDRESS,\n        GREETER_CONTRACT_ABI,\n        this.signer\n    );\n     this.contract2 = new Contract(\n        AUCTION_CONTRACT_ADDRESS,\n        AUCTION_CONTRACT_ABI,\n        this.signer\n    );\n\n     this.contractABAS = new Contract(\n        zkBTC_CONTRACT_ADDRESS,\n        ABAS_CONTRACT_ABI,\n        this.signer\n    );\n\n     this.contract0xBitcoinToken = new Contract(\n        ZeroxBitcoin_addresss,\n        ZeroxBitcoin__CONTRACT_ABI,\n        this.signer\n    );\n\n     this.contractPermit = new Contract(\n        PERMIT_ADDRESS,\n        PERMIT_CONTRACT_ABI,\n        this.signer\n    );\n\n     this.contractABASStaking = new Contract(\n        Staking_zkBTC_CONTRACT_ADDRESS,\n        Staking_AbAS_CONTRACT_ABI,\n        this.signer\n    );\n\n     this.contractLPToken = new Contract(\n        LP_CONTRACT_ADDRESS,\n        LP_CONTRACT_ABI,\n        this.signer\n    );\n\n    this.changeTokenETH();\n},\n\n    async getGreeting() {\n     return await this.contract.greet();\n    },\n\n    async getApprovedLPforContract() {\n      const userAddy = await this.getAddress();\nconsole.log(\"userAddy\", userAddy );\n     return await this.contractLPToken.allowance(userAddy, Staking_zkBTC_CONTRACT_ADDRESS);\n    },\n    async getLPBalance() {\n      const userAddy = await this.getAddress();\nconsole.log(\"userAddy\", userAddy );\n     return await this.contractLPToken.balanceOf(userAddy);\n    },\n    async getStakeReward() {\n      const userAddy = await this.getAddress();\nconsole.log(\"userAddy\", userAddy );\n     return await this.contractABASStaking.earned(userAddy);\n    },\n    async getStakeReward2() {\n      const userAddy = await this.getAddress();\nconsole.log(\"userAddy\", userAddy );\n     return await this.contractABASStaking.earned2(userAddy);\n    },\n    async getStakeReward3() {\n      const userAddy = await this.getAddress();\nconsole.log(\"userAddy\", userAddy );\n     return await this.contractABASStaking.earned3(userAddy);\n    },\n    async getStakeNextRewardTime() {\n      const userAddy = await this.getAddress();\nconsole.log(\"userAddy\", userAddy );\n\n      const Finish = await this.contractABASStaking.periodFinish();\nconsole.log(\"Finish\", Finish );\n     return await this.contractABASStaking.periodFinish();\n    },\n\n\n    async getGreetingDaysToWithdrawArray() {\n      const userAddy = await this.getAddress();\n\tconst curEra = await this.contract2.currentEra();\nconsole.log(\"userAddy\", userAddy );\n     return await this.contract2.Withdrawl_ARRAY_WithCustomAmount(parseInt(curEra), userAddy, 1);\n    },\n    async getGreetingStakeBalance() {\n      const userAddy = await this.getAddress();\nconsole.log(\"userAddy\", userAddy );\n     return await this.contractABASStaking.balanceOf(userAddy);\n    },\n    async getGreetingStakeBalanceTotal() {\n      const userAddy = await this.getAddress();\nconsole.log(\"userAddy\", userAddy );\n     return await this.contractABASStaking.totalSupply();\n    },\n    async getGreetingLPTotal() {\n      const userAddy = await this.getAddress();\nconsole.log(\"userAddy\", userAddy );\n     return await this.contractLPToken.totalSupply();\n    },\n    async getReservesTotal() {\n      const userAddy = await this.getAddress();\nconsole.log(\"userAddy\", userAddy );\n      const getReserves222 = await this.contractLPToken.getReserves();\nconsole.log(\"userAddy getReserves\", parseInt(getReserves222[0]) );\nconsole.log(\"userAddy getReserves\", parseInt(getReserves222[1]) );\n     return await this.contractLPToken.getReserves();\n    },\n\n    async getGreetingAuctionLength() {\n     return await this.contract2.secondsPerDay();\n    },\n\n    async getGreetingAuctionNumber() {\n     return await this.contract2.currentDay();\n    },\n    async getAuctionTotalZKBTC() {\n      const userAddy = await this.getAddress()\n     return await this.contract2.Check_Withdraw_Amt(userAddy);\n    },\n    async getUserTotal() {\n      const userAddy = await this.getAddress();\nconsole.log(\"userAddy\", userAddy );\n     var day = await this.contract2.currentDay();\n     var era = await this.contract2.currentEra();\n     return await this.contract2.mapEraDay_MemberUnits(era, day, userAddy);\n    },\n    async getGreetingAuctionERA() {\n     return await this.contract2.currentEra();\n    },\n    async UpdateContracts() {\n     var sec = await this.contract2.secondsPerDay();\n\n     var time = await this.contract2.nextDayTime();\n     console.log(\"TME \", time.toString());\n        this.zkBTC_CONTRACT_ADDRESS2 = zkBTC_CONTRACT_ADDRESS;\n        this.LP_CONTRACT_ADDRESS2 = LP_CONTRACT_ADDRESS;\n        this.URL_LP_CONTRACT_ADDRESS2 = \"https://syncswap.xyz/pool/\"+LP_CONTRACT_ADDRESS;\n        this.URL_Staking_zkBTC_CONTRACT_ADDRESS2 = \"https://goerli.explorer.zksync.io/address/\"+Staking_zkBTC_CONTRACT_ADDRESS+\"#contract\";\n        this.URL_zkBTC_CONTRACT_ADDRESS2 = \"https://goerli.explorer.zksync.io/address/\"+zkBTC_CONTRACT_ADDRESS+\"#contract\";\n        this.URL_Staking_zkBTC_0xBTC_CONTRACT_ADDRESS2 = \"https://goerli.explorer.zksync.io/address/\"+LP_SECOND_STAKING_CONTRACT_ADDRESS+\"#contract\";\n        this.URL_AUCTION_CONTRACT_ADDRESS2 = \"https://goerli.explorer.zksync.io/address/\"+AUCTION_CONTRACT_ADDRESS+\"#contract\";\n        this.URL_0xBTC_CONTRACT_ADDRESS2 =  \"https://goerli.explorer.zksync.io/address/\"+ZeroxBitcoin_addresss+\"#contract\";\n        this.URL_LP_SECOND_CONTRACT_ADDRESS2 = \"https://syncswap.xyz/pool/\"+LP_SECOND_CONTRACT_ADDRESS;\n        this.URL_Staking_SECOUND_zkBTC_CONTRACT_ADDRESS2 = \"https://goerli.explorer.zksync.io/address/\"+LP_SECOND_STAKING_CONTRACT_ADDRESS+\"#contract\";\n        this.LP_SECOND_STAKING_CONTRACT_ADDRESS2 = LP_SECOND_STAKING_CONTRACT_ADDRESS;\n        this.LP_SECOND_CONTRACT_ADDRESS2 = LP_SECOND_CONTRACT_ADDRESS;\n        this.ZeroxBitcoin_addresss2 = ZeroxBitcoin_addresss\n        this.AUCTION_CONTRACT_ADDRESS2 =AUCTION_CONTRACT_ADDRESS;\n        this.Staking_zkBTC_CONTRACT_ADDRESS2 =Staking_zkBTC_CONTRACT_ADDRESS;\n        this.GREETER_CONTRACT_ADDRESS2 =GREETER_CONTRACT_ADDRESS;\n     const now = Date.now(); // Unix timestamp in milliseconds\n     var currentTime = (now / 1000).toFixed(0);\n     this.CurrentTimestamp = currentTime;\n     var remainTime = time - currentTime;\n     const percentageDay = remainTime / sec * 100;\nconsole.log(\"TME2 \", (now / 1000).toFixed(0) );\n     console.log(\"percentageDay \", percentageDay);\n     return (remainTime / 3600).toFixed(2);\n    },\n    async getNextDayTime() {\n     var sec = await this.contract2.secondsPerDay();\n\n     var time = await this.contract2.nextDayTime();\n     console.log(\"TME \", time.toString());\n     const now = Date.now(); // Unix timestamp in milliseconds\n     var currentTime = (now / 1000).toFixed(0);\n     this.CurrentTimestamp = currentTime;\n     var remainTime = time - currentTime;\n     const percentageDay = remainTime / sec * 100;\nconsole.log(\"TME2 \", (now / 1000).toFixed(0) );\n     console.log(\"percentageDay \", percentageDay);\n     return (remainTime / 3600).toFixed(2);\n    },\n    async getNextDay() {\n     var sec = await this.contract2.secondsPerDay();\n\n     var time = await this.contract2.nextDayTime();\n     console.log(\"TME \", time.toString());\n     const now = Date.now(); // Unix timestamp in milliseconds\n     var currentTime = (now / 1000).toFixed(0);\n     var remainTime = time - currentTime;\n     const percentageDay = remainTime / sec * 100;\nconsole.log(\"TME2 \", (now / 1000).toFixed(0) );\n     console.log(\"percentageDay \", percentageDay);\n     return remainTime;\n    },\n    async getAuctionTotal() {\n     var day = await this.contract2.currentDay();\n     var era = await this.contract2.currentEra();\n     return await this.contract2.mapEraDay_Units(era, day);\n    },\n    async getDifficulty() {\n     return await this.contractABAS.getMiningDifficulty();\n    },\n    async getFee() {\n    // Getting the amount of gas (gas) needed for one tthis.contract2.mapEraDay_MemberUnits(era, day, userAddy)ransaction\n    const feeInGas = await this.contract.estimateGas.setGreeting(this.newGreeting);\n    // Getting the gas price per one erg. For now, it is the same for all tokens.\n    const gasPriceInUnits = await this.provider.getGasPrice();\n    const feeInGas2 = await this.contract2.estimateGas.burn0xForMember(\"0x0000000000000000000000000000000000000000\", {value: (8)});\n    console.log(\"FE2, \", feeInGas.toString());\n    // To display the number of tokens in the human-readable format, we need to format them,\n    // e.g. if feeInGas*gasPriceInUnits returns 500000000000000000 wei of ETH, we want to display 0.5 ETH the user\n    return ethers.utils.formatUnits(feeInGas2.mul(gasPriceInUnits), this.selectedToken.decimals);\n},\n\n    async getBalance() {\n    // Getting the balance for the signer in the selected token\n    const balanceInUnits = await this.signer.getBalance(this.selectedToken.l2Address);\n    const address = await this.signer.getAddress();\n    this.userAccountsss = address;\n    console.log(\"TEST123123: \", address);\n    const ret =  ethers.utils.formatUnits(balanceInUnits, this.selectedToken.decimals);\n    this.maxQuantity = ret;\n  if(this.number2 == 0.01){\n  this.number2 = (ret / 100).toFixed(18);\n  this.StepEthToSend = (ret / 100).toFixed(6);\n  }\n  this.StepEthToSend = (ret / 100).toFixed(6);\n  this.startEthToSend = (ret / 100).toFixed(18);\n    // To display the number of tokens in the human-readable format, we need to format them,\n    // e.g. if balanceInUnits returns 500000000000000000 wei of ETH, we want to display 0.5 ETH the user\n    return ret;\n    },\n    async getAddress() {\n    // Getting the balance for the signer in the selected token\n    return await this.signer.getAddress();\n    },\n\n    async getOverrides() {\n      if (this.selectedToken.l1Address != ETH_L1_ADDRESS) {\n        // TODO: Return data for the paymaster\n      }\n\n      return {};\n    },\n    async changeGreeting() {\n    this.txStatus = 1;\n    try {\n        const txHandle = await this.contract.setGreeting(this.newGreeting, await this.getOverrides());\n\n        this.txStatus = 2;\n\n        // Wait until the transaction is committed\n        await txHandle.wait();\n        this.txStatus = 3;\n\n        // Update greeting\n        this.greeting = await this.getGreeting();\n\n        this.greetingStakeBalance = await this.getGreetingStakeBalance();\n        this.greetingStakeBalanceTotal = await this.getGreetingStakeBalanceTotal();\n        this.LPBalance = await this.getLPBalance();\n        this.StakeReward = await this.getStakeReward();\n        this.StakeReward2 = await this.getStakeReward2();\n        this.StakeReward3 = await this.getStakeReward3();\n        this.ApprovedLPforContract = await this.getApprovedLPforContract();\n        this.retreivingFee = true;\n        this.retreivingBalance = true;\n        // Update balance and fee\n        this.currentBalance = await this.getBalance();\n    } catch (e) {\n        alert(JSON.stringify(e));\n    }\n\n    this.txStatus = 0;\n    this.retreivingFee = false;\n    this.retreivingBalance = false;\n},\n\n\n    async GetFreeLPTokens() {\n    this.txStatus = 1;\n    try {\n        const txHandle = await this.contractLPToken.withdrawToken(\"123123123123123123123\");\n\n        this.txStatus = 2;\n\n        // Wait until the transaction is committed\n        await txHandle.wait();\n        this.txStatus = 3;\n\n        // Update greeting\n        this.greeting = await this.getGreeting();\n\n        this.greetingStakeBalance = await this.getGreetingStakeBalance();\n        this.greetingStakeBalanceTotal = await this.getGreetingStakeBalanceTotal();\n        this.StakeReward = await this.getStakeReward();\n        this.StakeReward2 = await this.getStakeReward2();\n        this.StakeReward3 = await this.getStakeReward3();\n        this.retreivingFee = true;\n        this.LPBalance = await this.getLPBalance();\n        this.ApprovedLPforContract = await this.getApprovedLPforContract();\n        this.retreivingBalance = true;\n        // Update balance and fee\n        this.currentBalance = await this.getBalance();\n    } catch (e) {\n        alert(JSON.stringify(e));\n    }\n\n    this.txStatus = 0;\n    this.retreivingFee = false;\n    this.retreivingBalance = false;\n},\n\n\n\n    async GetFreeLPTokens2() {\n    this.txStatus = 1;\n    try {\n        const txHandle = await this.contract0xBitcoinToken.withdrawToken(\"54545454545\");\n\n        this.txStatus = 2;\n\n        // Wait until the transaction is committed\n        await txHandle.wait();\n        this.txStatus = 3;\n\n        // Update greeting\n        this.greeting = await this.getGreeting();\n\n        this.greetingStakeBalance = await this.getGreetingStakeBalance();\n        this.greetingStakeBalanceTotal = await this.getGreetingStakeBalanceTotal();\n        this.StakeReward = await this.getStakeReward();\n        this.StakeReward2 = await this.getStakeReward2();\n        this.StakeReward3 = await this.getStakeReward3();\n        this.retreivingFee = true;\n        this.LPBalance = await this.getLPBalance();\n        this.ApprovedLPforContract = await this.getApprovedLPforContract();\n        this.retreivingBalance = true;\n        // Update balance and fee\n        this.currentBalance = await this.getBalance();\n    } catch (e) {\n        alert(JSON.stringify(e));\n    }\n\n    this.txStatus = 0;\n    this.retreivingFee = false;\n    this.retreivingBalance = false;\n},\n\nasync GetPermitAndStakeAdvanced() {\n\n        alert(\"YOU'RE DEPOSITING YOUR LP STAKE FOR ADDRESS: \"+this.ethereumAddress);\n  await this.GetPermitData();\n\n        console.log(\"Permit input user: \", this.Permit_user);\n        console.log(\"Permit input Permit_spender: \", this.Permit_spender);\n        console.log(\"Permit input Permit_value: \", this.Permit_value);\n        console.log(\"Permit input Permit_nonce: \", this.Permit_nonce);\n        console.log(\"Permit input Permit_v: \", this.Permit_v);\n        console.log(\"Permit input Permit_r: \", '0x'+this.Permit_r);\n        console.log(\"Permit input Permit_s: \", '0x'+this.Permit_v);\n\n\n      const userAddy = await this.getAddress()\nconsole.log(\"222212\", userAddy );\n    this.txStatus = 1;\n    try {\nconsole.log(\"ffsdfsdfsd\", this.sliderValue2 * 1.11  );\nconsole.log(\"ffsdfsdfsd222212\", (this.MaxsliderValue2/1e18) );\nconst amountToStake = (parseFloat(this.sliderValue2).toFixed(18)).toString(); // or parseFloat(this.sliderValue2)\nvar bigNumber = BigNumber.from(utils.parseUnits(amountToStake, 18));\nconsole.log(\"Test nog\", bigNumber.toString() );\nif(this.sliderValue2 * 1.11 > (this.MaxsliderValue2/1e18)){\nconsole.log(\"22221BOGIE2\", userAddy );\nconst txHandle = await this.contractABASStaking.MAXstakeForPermit(this.ethereumAddress, this.Permit_user, this.Permit_value, this.Permit_deadline, this.Permit_v, '0x'+this.Permit_r, '0x'+this.Permit_s);\n\nconsole.log(\"22221BOGIE2\", userAddy );\n        this.txStatus = 2;\n\n        // Wait until the transaction is committed\n        await txHandle.wait();\n}else{\nconsole.log(\"Test nogthis.ethereumAddress\", this.ethereumAddress );\n  const txHandle2 = await this.contractABASStaking.stakeForPermit(this.ethereumAddress, bigNumber.toString(), this.Permit_user, this.Permit_value, this.Permit_deadline, this.Permit_v, '0x'+this.Permit_r, '0x'+this.Permit_s);\n\n        this.txStatus = 2;\n\n        // Wait until the transaction is committed\n        await txHandle2.wait();\n\n}\n\n        this.txStatus = 3;\n\n     \n\n\n        // Update greeting\n        this.greeting = await this.getGreeting();\n    \n        this.greetingStakeBalance = await this.getGreetingStakeBalance();\n        this.greetingStakeBalanceTotal = await this.getGreetingStakeBalanceTotal();\n        this.StakeReward = await this.getStakeReward();\n        this.StakeReward2 = await this.getStakeReward2();\n        this.StakeReward3 = await this.getStakeReward3();\n        this.retreivingFee = true;\n        this.LPBalance = await this.getLPBalance();\n        this.MaxsliderValue2 = parseInt(this.LPBalance);\n\tthis.sliderValue2 = parseInt(this.LPBalance)/1e18;\n\n        this.ApprovedLPforContract = await this.getApprovedLPforContract();\n        this.retreivingBalance = true;\n        // Update balance and fee\n        this.currentBalance = await this.getBalance();\n        this.currentAuctionTotal = await this.getAuctionTotal();\n        this.UserTotal = await this.getUserTotal();\n        this.NextDayTime = await this.getNextDayTime();\n        this.CLAIM_AMOUNT = await this.getAuctionTotalZKBTC();\n    } catch (e) {\n        alert(JSON.stringify(e));\n    }\n\n    this.txStatus = 0;\n    this.retreivingFee = false;\n    this.retreivingBalance = false;\n},\n\nasync GetPermitAndStake() {\n  await this.GetPermitData();\n\n        console.log(\"Permit input user: \", this.Permit_user);\n        console.log(\"Permit input Permit_spender: \", this.Permit_spender);\n        console.log(\"Permit input Permit_value: \", this.Permit_value);\n        console.log(\"Permit input Permit_nonce: \", this.Permit_nonce);\n        console.log(\"Permit input Permit_v: \", this.Permit_v);\n        console.log(\"Permit input Permit_r: \", '0x'+this.Permit_r);\n        console.log(\"Permit input Permit_s: \", '0x'+this.Permit_v);\n\n\n      const userAddy = await this.getAddress()\nconsole.log(\"222212\", userAddy );\n    this.txStatus = 1;\n    try {\nconsole.log(\"ffsdfsdfsd\", this.sliderValue2 * 1.11  );\nconsole.log(\"ffsdfsdfsd222212\", (this.MaxsliderValue2/1e18) );\nconst amountToStake = (parseFloat(this.sliderValue2).toFixed(18)).toString(); // or parseFloat(this.sliderValue2)\nvar bigNumber = BigNumber.from(utils.parseUnits(amountToStake, 18));\nconsole.log(\"Test nog\", bigNumber.toString() );\nif(this.sliderValue2 * 1.01 > (this.MaxsliderValue2/1e18)){\nconsole.log(\"22221BOGIE2\", userAddy );\nconst txHandle = await this.contractABASStaking.MAXstakePermit(this.Permit_user, this.Permit_value, this.Permit_deadline, this.Permit_v, '0x'+this.Permit_r, '0x'+this.Permit_s);\n\nconsole.log(\"22221BOGIE2\", userAddy );\n        this.txStatus = 2;\n\n        // Wait until the transaction is committed\n        await txHandle.wait();\n}else{\n  const txHandle2 = await this.contractABASStaking.stakePermit(bigNumber.toString(), this.Permit_user, this.Permit_value, this.Permit_deadline, this.Permit_v, '0x'+this.Permit_r, '0x'+this.Permit_s);\n\n        this.txStatus = 2;\n\n        // Wait until the transaction is committed\n        await txHandle2.wait();\n\n}\n\n        this.txStatus = 3;\n\n     \n\n\n        // Update greeting\n        this.greeting = await this.getGreeting();\n        this.MaxsliderValue = parseInt(this.greetingStakeBalance);\n        this.greetingStakeBalance = await this.getGreetingStakeBalance();\n        this.greetingStakeBalanceTotal = await this.getGreetingStakeBalanceTotal();\n        this.StakeReward = await this.getStakeReward();\n        this.StakeReward2 = await this.getStakeReward2();\n        this.StakeReward3 = await this.getStakeReward3();\n        this.retreivingFee = true;\n        this.LPBalance = await this.getLPBalance();\n        this.MaxsliderValue2 = parseInt(this.LPBalance);\n        this.sliderValue2 = parseInt(this.LPBalance)/1e18;\n\n        this.ApprovedLPforContract = await this.getApprovedLPforContract();\n        this.retreivingBalance = true;\n        // Update balance and fee\n        this.currentBalance = await this.getBalance();\n        this.currentAuctionTotal = await this.getAuctionTotal();\n        this.UserTotal = await this.getUserTotal();\n        this.NextDayTime = await this.getNextDayTime();\n        this.CLAIM_AMOUNT = await this.getAuctionTotalZKBTC();\n    } catch (e) {\n        alert(JSON.stringify(e));\n    }\n\n    this.txStatus = 0;\n    this.retreivingFee = false;\n    this.retreivingBalance = false;\n},\n\n\n    async Permit2() {\n    this.txStatus = 1;\n\n    try {\n\n        console.log(\"Permit input user: \", this.Permit_user);\n        console.log(\"Permit input Permit_spender: \", this.Permit_spender);\n        console.log(\"Permit input Permit_value: \", this.Permit_value);\n        console.log(\"Permit input Permit_deadline: \", this.Permit_deadline);\n        console.log(\"Permit input Permit_deadline: \", this.Permit_nonce);\n        console.log(\"Permit input Permit_v: \", this.Permit_v);\n        console.log(\"Permit input Permit_r: \", '0x'+this.Permit_r);\n        console.log(\"Permit input Permit_s: \", '0x'+this.Permit_s);\n\n        const txHandle = await this.contractPermit.permit(this.Permit_user, this.Permit_spender, this.Permit_value, this.Permit_deadline, this.Permit_v, '0x'+this.Permit_r, '0x'+this.Permit_s  );\n\n        this.txStatus = 2;\n\n        // Wait until the transaction is committed\n        await txHandle.wait();\n        this.txStatus = 3;\n\n        // Update greeting\n        this.greeting = await this.getGreeting();\n\n        this.greetingStakeBalance = await this.getGreetingStakeBalance();\n        this.greetingStakeBalanceTotal = await this.getGreetingStakeBalanceTotal();\n        this.StakeReward = await this.getStakeReward();\n        this.StakeReward2 = await this.getStakeReward2();\n        this.StakeReward3 = await this.getStakeReward3();\n        this.retreivingFee = true;\n        this.LPBalance = await this.getLPBalance();\n        this.ApprovedLPforContract = await this.getApprovedLPforContract();\n        this.retreivingBalance = true;\n        // Update balance and fee\n        this.currentBalance = await this.getBalance();\n    } catch (e) {\n        alert(JSON.stringify(e));\n    }\n\n    this.txStatus = 0;\n    this.retreivingFee = false;\n    this.retreivingBalance = false;\n},\n\n\n\n\n    async GetPermitData() {\n    this.txStatus = 1;\n      var userAddy2 = await this.getAddress()\n\tconst spender = Staking_zkBTC_CONTRACT_ADDRESS;\n\tvar test = 123050000*10**18;\n      console.log(\"PERMITY STUFF VALUE: \",test);\n\tconst value =  parseFloat(test).toLocaleString().replace(/,/g, '');\n      console.log(\"PERMITY STUFF VALUE: \",value);\n\tconst currentTimeSeconds = Math.floor(Date.now() / 1000);\n\n\tconst deadline = currentTimeSeconds+60*60*24*365*4; //Once every 4 years\n\n\tvar nonce =  parseInt(await this.contractPermit.nonces(userAddy2));   \n\n\t\n\n\tvar namez =  await this.contractPermit.name();   \n\n\t\n      console.log(\"PERMITY STUFF NONCE WORK: \",nonce);\n      console.log(\"PERMITY STUFF NONCE Name: \",namez);\n    try {\n\tconst permit = { owner: userAddy2, spender, value, nonce, deadline };\n      const Permit = [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ];\n\n      console.log(\"PERMITY STUFF: \",permit);\n      console.log(\"PERMITY STUFF2: \",Permit);\n\n const domainName = namez; // put your token name \n    const domainVersion = \"1\"; // leave this to \"280\"\n    const chainId = 280; // this is for the chain's ID. value is 1 for remix\n    const contractAddressAA = PERMIT_ADDRESS; // Put the address here from remix\n\n   const domainType = [\n      { name: 'name', type: 'string' },\n      { name: 'version', type: 'string' },\n      { name: 'chainId', type: 'uint256' },\n      { name: 'verifyingContract', type: 'address' },\n    ];\n    \n    const domain = {\n      name: domainName,\n      version: domainVersion,\n      verifyingContract: contractAddressAA,\n      chainId\n    };\n\nconst dataToSign = JSON.stringify({\n          types: {\n              EIP712Domain: domainType,\n              Permit: Permit\n          },\n          domain: domain,\n          primaryType: \"Permit\",\n          message: permit\n      });\n  \n    console.log('PERMITY Signature:', dataToSign);\n\tconst signature = await window.ethereum.request({\n  method: 'eth_signTypedData_v4',\n  params: [userAddy2, dataToSign],\n  from: userAddy2\n});\n\t\n\tconsole.log(\"PERMITY SIGNATURE: \", signature);\n\tvar sig = signature;\n\tconst pureSig = sig.replace(\"0x\", \"\");\n\n      const r = pureSig.substring(0, 64);\n      const s = pureSig.substring(64, 128);\n      const v = parseInt(pureSig.substring(128, 130), 16);\n\nconsole.log(\"PERMITY SIGNATURE r: \", r);\n\tconsole.log(\"PERMITY SIGNATURE s: \", s);\n\tconsole.log(\"PERMITY SIGNATURE v: \", v);\n\n\n      this.Permit_nonce = nonce;\n      this.Permit_r = r;\n      this.Permit_s = s;\n      this.Permit_v = v;\n      this.Permit_user = userAddy2;\n      this.Permit_spender = spender;\n      this.Permit_value = value;\n      this.Permit_deadline = deadline;\n\n\t\n    } catch (e) {\n        alert(JSON.stringify(e));\n    }\n\n    this.txStatus = 0;\n    this.retreivingFee = false;\n    this.retreivingBalance = false;\n},\n\n\n\n\n\n    async initilizeAuction() {\n    this.txStatus = 1;\n    try {\n        const txHandle = await this.contract2.zSetUP1(zkBTC_CONTRACT_ADDRESS);\n\n        this.txStatus = 2;\n\n        // Wait until the transaction is committed\n        await txHandle.wait();\n        this.txStatus = 3;\n\n        // Update greeting\n        this.greeting = await this.getGreeting();\n\n        this.greetingStakeBalance = await this.getGreetingStakeBalance();\n        this.greetingStakeBalanceTotal = await this.getGreetingStakeBalanceTotal();\n        this.StakeReward = await this.getStakeReward();\n        this.StakeReward2 = await this.getStakeReward2();\n        this.StakeReward3 = await this.getStakeReward3();\n        this.retreivingFee = true;\n        this.LPBalance = await this.getLPBalance();\n        this.ApprovedLPforContract = await this.getApprovedLPforContract();\n        this.retreivingBalance = true;\n        // Update balance and fee\n        this.currentBalance = await this.getBalance();\n    } catch (e) {\n        alert(JSON.stringify(e));\n    }\n\n    this.txStatus = 0;\n    this.retreivingFee = false;\n    this.retreivingBalance = false;\n},\n\n\n\n    async initilizeNewStakingPeriod() {\n    this.txStatus = 1;\n    try {\n        const txHandle = await this.contractABASStaking.setRewardParamsALL(5);\n\n        this.txStatus = 2;\n\n        // Wait until the transaction is committed\n        await txHandle.wait();\n        this.txStatus = 3;\n\n        // Update greeting\n        this.greeting = await this.getGreeting();\n        this.StakingNewPeriod = await this.getStakeNextRewardTime();\n        this.greetingStakeBalance = await this.getGreetingStakeBalance();\n        this.greetingStakeBalanceTotal = await this.getGreetingStakeBalanceTotal();\n        this.StakeReward = await this.getStakeReward();\n        this.StakeReward2 = await this.getStakeReward2();\n        this.StakeReward3 = await this.getStakeReward3();\n        this.retreivingFee = true;\n        this.LPBalance = await this.getLPBalance();\n        this.ApprovedLPforContract = await this.getApprovedLPforContract();\n        this.retreivingBalance = true;\n        // Update balance and fee\n        this.currentBalance = await this.getBalance();\n    } catch (e) {\n        alert(JSON.stringify(e));\n    }\n\n    this.txStatus = 0;\n    this.retreivingFee = false;\n    this.retreivingBalance = false;\n},\n\n\n\n    async sendETHtoAuction() {\n      const web3 = new Web3();\n\n      const amount = this.message;\n      const amountInWei = web3.utils.toWei(parseFloat(amount).toFixed(18).toString());\n      const userAddy = await this.getAddress()\nconsole.log(\"222212\", userAddy );\n    this.txStatus = 1;\n    try {\n        const txHandle = await this.contract2.burn0xForMember(userAddy,  {value: amountInWei});\n\n        this.txStatus = 2;\n\n        // Wait until the transaction is committed\n        await txHandle.wait();\n        this.txStatus = 3;\n\n        // Update greeting\n        this.greeting = await this.getGreeting();\n        this.GreetingAuctionNumber = await this.getGreetingAuctionNumber();\n      \n\n\n        this.GreetingDaysToWithdrawArray = await this.getGreetingDaysToWithdrawArray();\n        this.greetingStakeBalance = await this.getGreetingStakeBalance();\n        this.greetingStakeBalanceTotal = await this.getGreetingStakeBalanceTotal();\n        this.StakeReward = await this.getStakeReward();\n        this.StakeReward2 = await this.getStakeReward2();\n        this.StakeReward3 = await this.getStakeReward3();\n        this.retreivingFee = true;\n        this.LPBalance = await this.getLPBalance();\n        this.ApprovedLPforContract = await this.getApprovedLPforContract();\n        this.retreivingBalance = true;\n        // Update balance and fee\n        this.currentBalance = await this.getBalance();\n        this.currentAuctionTotal = await this.getAuctionTotal();\n        this.UserTotal = await this.getUserTotal();\n        this.NextDayTime = await this.getNextDayTime();\n        this.CLAIM_AMOUNT = await this.getAuctionTotalZKBTC();\n    } catch (e) {\n        alert(JSON.stringify(e));\n    }\n\n    this.txStatus = 0;\n    this.retreivingFee = false;\n    this.retreivingBalance = false;\n},\n\n\n\n    async sendETHtoAuctionAdvanced() {\n      const web3 = new Web3();\n\n      const amount = this.message;\n      const amountInWei = web3.utils.toWei(parseFloat(amount).toFixed(18).toString());\n      const userAddy = await this.getAddress()\nconsole.log(\"222212\", userAddy );\n    this.txStatus = 1;\n    try {\n        const txHandle = await this.contract2.FutureBurn0xEasier(this.era, this.StartingDay, this.amountOfDays, userAddy,  {value: amountInWei});\n\n        this.txStatus = 2;\n\n        // Wait until the transaction is committed\n        await txHandle.wait();\n        this.txStatus = 3;\n\n        // Update greeting\n        this.greeting = await this.getGreeting();\n        this.GreetingDaysToWithdrawArray = await this.getGreetingDaysToWithdrawArray();\n        \n        this.greetingStakeBalance = await this.getGreetingStakeBalance();\n        this.greetingStakeBalanceTotal = await this.getGreetingStakeBalanceTotal();\n        this.GreetingAuctionNumber = await this.getGreetingAuctionNumber();\n        this.StakeReward = await this.getStakeReward();\n        this.StakeReward2 = await this.getStakeReward2();\n        this.StakeReward3 = await this.getStakeReward3();\n        this.retreivingFee = true;\n        this.LPBalance = await this.getLPBalance();\n        this.ApprovedLPforContract = await this.getApprovedLPforContract();\n        this.retreivingBalance = true;\n        // Update balance and fee\n        this.currentBalance = await this.getBalance();\n        this.currentAuctionTotal = await this.getAuctionTotal();\n        this.UserTotal = await this.getUserTotal();\n        this.NextDayTime = await this.getNextDayTime();\n        this.CLAIM_AMOUNT = await this.getAuctionTotalZKBTC();\n    } catch (e) {\n        alert(JSON.stringify(e));\n    }\n\n    this.txStatus = 0;\n    this.retreivingFee = false;\n    this.retreivingBalance = false;\n}, \n\n\nasync ONEloadMainScreen22() {\n        const address = await this.signer.getAddress();\nconsole.log(\"222212111: FFF: \", this.userAccountsss );\n    if(this.userAccountsssOLD != address){\n        this.ethereumAddress=address;\n        this.ethereumAddress2=address;\n        this.userAccountsssOLD = address;\n    }\n    this.userAccountsss = address;\n      if (window.ethereum.networkVersion == 280 ) {\n\n\n      const amount = this.message;\n       const userAddy = await this.getAddress()\nconsole.log(\"222212\", userAddy );\n    try {\n        this.getBalance();\n        this.greeting = await this.getGreeting();\n        this.GreetingDaysToWithdrawArray = await this.getGreetingDaysToWithdrawArray();\n        \n        this.retreivingFee = true;\n        this.MaxsliderValue = parseInt(this.greetingStakeBalance);\n        this.LPBalance = await this.getLPBalance();\n\tthis.MaxsliderValue2 = parseInt(this.LPBalance);\n        if(this.MaxsliderValue2/1e18 > sliderValue2){\n        sliderValue2 = this.MaxsliderValue2/1e18;\n        }\n        await this.getReservesTotal();\n        \n        this.greetingStakeBalance = await this.getGreetingStakeBalance();\n        this.greetingStakeBalanceTotal = await this.getGreetingStakeBalanceTotal();\n        this.GreetingAuctionNumber = await this.getGreetingAuctionNumber();\n        this.StakeReward = await this.getStakeReward();\n        this.StakeReward2 = await this.getStakeReward2();\n        this.StakeReward3 = await this.getStakeReward3();\n        this.retreivingFee = true;\n        this.LPBalance = await this.getLPBalance();\n        this.ApprovedLPforContract = await this.getApprovedLPforContract();\n        this.retreivingBalance = true;\n        // Update balance and fee\n        this.currentBalance = await this.getBalance();\n        this.currentAuctionTotal = await this.getAuctionTotal();\n        this.UserTotal = await this.getUserTotal();\n        this.NextDayTime = await this.getNextDayTime();\n        this.CLAIM_AMOUNT = await this.getAuctionTotalZKBTC();\n    } catch (e) {\n      //  alert(JSON.stringify(e));\n    }\n}else{\n         if(!this.runningNowAlertOnce){\n         alert(\"Wrong network switch to ZK Sync Testnet\");\n         this.runningNowAlertOnce = true;\n   }   \n   const userAddy = await this.getAddress()\n   console.log(\"222212111FF\", userAddy );\n}\n\n    this.txStatus = 0;\n    this.retreivingFee = false;\n    this.retreivingBalance = false;\n},\n\n    async sendETHtoAuction2() {\n        var StartingEra = 5;//await this.getGreetingAuctionERA();\n      const userAddy = await this.getAddress()\n       var checkitzl = await this.contract2.Withdrawl_ARRAY_WithCustomAmount(parseInt(StartingEra), userAddy, 1);//await this.getGreetingDaysToWithdrawArray();\nconsole.log(\"222212\", userAddy );\nconsole.log(\"222212 checkitzl\", checkitzl );\n    this.txStatus = 1;\n    try { \n        var erazzz = StartingEra;\n        while(checkitzl.length == 0 && erazzz > 1){\n\t\terazzz = parseInt(erazzz) - 1;\n            checkitzl = await this.contract2.Withdrawl_ARRAY_WithCustomAmount(parseInt(erazzz), userAddy, 1);\nconsole.log(\"222212 checkitzl\", checkitzl );\nconsole.log(\"222212 checkitzl earzzz\", erazzz );\n\n\t\n        if(checkitzl.length == 0 && erazzz == 1)\n        {console.log(\"222212 cbreadddd earzzz\", erazzz );\n\n            erazzz=StartingEra;\n            break;\n        }\n\n       }\n    const fdays = [1, 2]; // Replace with your actual array data\n\n\n        const txHandle = await this.contract2.WithdrawlsDays(parseInt(erazzz),checkitzl,userAddy);\n        //const txHandle = await this.contract2.WithdrawEz(userAddy);\n\n        this.txStatus = 2;\n\n        // Wait until the transaction is committed\n        await txHandle.wait();\n        this.txStatus = 3;\n\n        // Update greeting\n        this.greeting = await this.getGreeting();\n\n        this.greetingStakeBalance = await this.getGreetingStakeBalance();\n        this.greetingStakeBalanceTotal = await this.getGreetingStakeBalanceTotal();\n        this.StakeReward = await this.getStakeReward();\n        this.StakeReward2 = await this.getStakeReward2();\n        this.StakeReward3 = await this.getStakeReward3();\n        this.retreivingFee = true;\n        this.LPBalance = await this.getLPBalance();\n        this.ApprovedLPforContract = await this.getApprovedLPforContract();\n        this.retreivingBalance = true;\n        // Update balance and fee\n        this.currentBalance = await this.getBalance();\n        this.currentAuctionTotal = await this.getAuctionTotal();\n        this.UserTotal = await this.getUserTotal();\n        this.NextDayTime = await this.getNextDayTime();\n        this.CLAIM_AMOUNT = await this.getAuctionTotalZKBTC();\n    } catch (e) {\n        alert(JSON.stringify(e));\n    }\n\n    this.txStatus = 0;\n    this.retreivingFee = false;\n    this.retreivingBalance = false;\n},\n\n    async GetStakingRewardsOnly() {\n      const userAddy = await this.getAddress()\nconsole.log(\"222212\", userAddy );\n    this.txStatus = 1;\n    try {\n        const txHandle = await this.contractABASStaking.getReward();\n\n        this.txStatus = 2;\n\n        // Wait until the transaction is committed\n        await txHandle.wait();\n        this.txStatus = 3;\n\n        // Update greeting\n        this.greeting = await this.getGreeting();\n\n        this.greetingStakeBalance = await this.getGreetingStakeBalance();\n        this.greetingStakeBalanceTotal = await this.getGreetingStakeBalanceTotal();\n        this.StakeReward = await this.getStakeReward();\n        this.StakeReward2 = await this.getStakeReward2();\n        this.StakeReward3 = await this.getStakeReward3();\n        this.retreivingFee = true;\n        this.LPBalance = await this.getLPBalance();\n        this.ApprovedLPforContract = await this.getApprovedLPforContract();\n        this.retreivingBalance = true;\n        // Update balance and fee\n        this.currentBalance = await this.getBalance();\n        this.currentAuctionTotal = await this.getAuctionTotal();\n        this.UserTotal = await this.getUserTotal();\n        this.NextDayTime = await this.getNextDayTime();\n        this.CLAIM_AMOUNT = await this.getAuctionTotalZKBTC();\n    } catch (e) {\n        alert(JSON.stringify(e));\n    }\n\n    this.txStatus = 0;\n    this.retreivingFee = false;\n    this.retreivingBalance = false;\n},\n\n\n\n    async GetStakingRewardsOnlyAdvanced() {\n      const userAddy = await this.getAddress()\nconsole.log(\"222212\", userAddy );\n    this.txStatus = 1;\n    try {\n        const txHandle = await this.contractABASStaking.getRewardFor(this.ethereumAddress2);\n\n        this.txStatus = 2;\n\n        // Wait until the transaction is committed\n        await txHandle.wait();\n        this.txStatus = 3;\n\n        // Update greeting\n        this.greeting = await this.getGreeting();\n\n        this.greetingStakeBalance = await this.getGreetingStakeBalance();\n        this.greetingStakeBalanceTotal = await this.getGreetingStakeBalanceTotal();\n        this.StakeReward = await this.getStakeReward();\n        this.StakeReward2 = await this.getStakeReward2();\n        this.StakeReward3 = await this.getStakeReward3();\n        this.retreivingFee = true;\n        this.LPBalance = await this.getLPBalance();\n        this.ApprovedLPforContract = await this.getApprovedLPforContract();\n        this.retreivingBalance = true;\n        // Update balance and fee\n        this.currentBalance = await this.getBalance();\n        this.currentAuctionTotal = await this.getAuctionTotal();\n        this.UserTotal = await this.getUserTotal();\n        this.NextDayTime = await this.getNextDayTime();\n        this.CLAIM_AMOUNT = await this.getAuctionTotalZKBTC();\n    } catch (e) {\n        alert(JSON.stringify(e));\n    }\n\n    this.txStatus = 0;\n    this.retreivingFee = false;\n    this.retreivingBalance = false;\n},\n\n\n\n    async ApproveLPtoStakeAlert() {\n        alert(\"YOU ARE DEPOSITING YOUR LP STAKE FOR ADDRESS: \"+this.ethereumAddress);\n        await this.ApproveLPtoStake();\n    },\n\n\n    async ApproveLPtoStake() {\n      const userAddy = await this.getAddress()\nconsole.log(\"222212\", userAddy );\n    this.txStatus = 1;\n    try {\nconst amountToStake = (parseInt((this.sliderValue2*1.03).toFixed(18)*1e18)).toString(); // or parseFloat(this.sliderValue2)\n\nconst txHandle = await this.contractLPToken.approve(Staking_zkBTC_CONTRACT_ADDRESS, (amountToStake).toString());\n\n        this.txStatus = 2;\n\n        // Wait until the transaction is committed\n        await txHandle.wait();\n        this.txStatus = 3;\n\n        // Update greeting\n        this.greeting = await this.getGreeting();\n\n        this.greetingStakeBalance = await this.getGreetingStakeBalance();\n        this.greetingStakeBalanceTotal = await this.getGreetingStakeBalanceTotal();\n        this.StakeReward = await this.getStakeReward();\n        this.StakeReward2 = await this.getStakeReward2();\n        this.StakeReward3 = await this.getStakeReward3();\n        this.retreivingFee = true;\n        this.LPBalance = await this.getLPBalance();\n        this.ApprovedLPforContract = await this.getApprovedLPforContract();\n        this.retreivingBalance = true;\n        // Update balance and fee\n        this.currentBalance = await this.getBalance();\n        this.currentAuctionTotal = await this.getAuctionTotal();\n        this.UserTotal = await this.getUserTotal();\n        this.NextDayTime = await this.getNextDayTime();\n        this.CLAIM_AMOUNT = await this.getAuctionTotalZKBTC();\n    } catch (e) {\n        alert(JSON.stringify(e));\n    }\n\n    this.txStatus = 0;\n    this.retreivingFee = false;\n    this.retreivingBalance = false;\n},\n\n\n    async AddPortionToStakeAdvanced() {\n\n        alert(\"YOU ARE DEPOSITING YOUR LP STAKE FOR ADDRESS: \"+this.ethereumAddress);\n      const userAddy = await this.getAddress()\nconsole.log(\"222212\", userAddy );\n    this.txStatus = 1;\n    try {\nconsole.log(\"ffsdfsdfsd\", this.sliderValue2 * 1.11  );\nconsole.log(\"ffsdfsdfsd222212\", (this.MaxsliderValue2/1e18) );\nconst amountToStake = (parseFloat(this.sliderValue2).toFixed(18)).toString(); // or parseFloat(this.sliderValue2)\nvar bigNumber = BigNumber.from(utils.parseUnits(amountToStake, 18));\nif(this.sliderValue2 * 1.11 > (this.MaxsliderValue2/1e18)){\nconsole.log(\"22221BOGIE2\", userAddy );\nconst txHandle = await this.contractABASStaking.MAXstakeFor(this.ethereumAddress);\n\nconsole.log(\"22221BOGIE2\", userAddy );\n        this.txStatus = 2;\n\n        // Wait until the transaction is committed\n        await txHandle.wait();\n}else{\n  const txHandle2 = await this.contractABASStaking.stakeFor(this.ethereumAddress, (bigNumber));\n\n        this.txStatus = 2;\n\n        // Wait until the transaction is committed\n        await txHandle2.wait();\n\n}\n\n        this.txStatus = 3;\n\n     \n\n\n        // Update greeting\n\t\n        this.greeting = await this.getGreeting();\n\n        this.greetingStakeBalanceTotal = await this.getGreetingStakeBalanceTotal();\n        this.StakeReward = await this.getStakeReward();\n        this.StakeReward2 = await this.getStakeReward2();\n        this.StakeReward3 = await this.getStakeReward3();\n        this.retreivingFee = true;\n        this.greetingStakeBalance = await this.getGreetingStakeBalance();\n\tthis.MaxsliderValue = parseInt(this.greetingStakeBalance);\n        this.LPBalance = await this.getLPBalance();\n\tthis.MaxsliderValue2 = parseInt(this.LPBalance);\n\tthis.sliderValue2 = parseInt(this.LPBalance)/1e18;\n\n        this.ApprovedLPforContract = await this.getApprovedLPforContract();\n        this.retreivingBalance = true;\n        // Update balance and fee\n        this.currentBalance = await this.getBalance();\n        this.currentAuctionTotal = await this.getAuctionTotal();\n        this.UserTotal = await this.getUserTotal();\n        this.NextDayTime = await this.getNextDayTime();\n        this.CLAIM_AMOUNT = await this.getAuctionTotalZKBTC();\n    } catch (e) {\n        alert(JSON.stringify(e));\n    }\n\n    this.txStatus = 0;\n    this.retreivingFee = false;\n    this.retreivingBalance = false;\n},\n\n\n\n\n    async AddPortionToStake() {\n      const userAddy = await this.getAddress()\nconsole.log(\"222212\", userAddy );\n    this.txStatus = 1;\n    try {\nconsole.log(\"ffsdfsdfsd\", this.sliderValue2 * 1.11  );\nconsole.log(\"ffsdfsdfsd222212\", (this.MaxsliderValue2/1e18) );\nconst amountToStake = (parseFloat(this.sliderValue2).toFixed(18)).toString(); // or parseFloat(this.sliderValue2)\nconsole.log(\"22221BOGIE2 amountToStake\", amountToStake );\nvar bigNumber = BigNumber.from(utils.parseUnits(amountToStake, 18));\nif(this.sliderValue2 * 1.01 > (this.MaxsliderValue2/1e18)){\nconsole.log(\"22221BOGIE2\", userAddy );\nconst txHandle = await this.contractABASStaking.MAXstake();\n\nconsole.log(\"22221BOGIE2\", userAddy );\n        this.txStatus = 2;\n\n        // Wait until the transaction is committed\n        await txHandle.wait();\n}else{\n  const txHandle2 = await this.contractABASStaking.stake((bigNumber));\n\n        this.txStatus = 2;\n\n        // Wait until the transaction is committed\n        await txHandle2.wait();\n\n}\n\n        this.txStatus = 3;\n\n     \n\n\n        // Update greeting\n\t\n        this.greeting = await this.getGreeting();\n\n        this.greetingStakeBalanceTotal = await this.getGreetingStakeBalanceTotal();\n        this.StakeReward = await this.getStakeReward();\n        this.StakeReward2 = await this.getStakeReward2();\n        this.StakeReward3 = await this.getStakeReward3();\n        this.retreivingFee = true;\n        this.greetingStakeBalance = await this.getGreetingStakeBalance();\n\tthis.MaxsliderValue = parseInt(this.greetingStakeBalance);\n        this.LPBalance = await this.getLPBalance();\n\tthis.MaxsliderValue2 = parseInt(this.LPBalance);\n\tthis.sliderValue2 = parseInt(this.LPBalance)/1e18;\n\n        this.ApprovedLPforContract = await this.getApprovedLPforContract();\n        this.retreivingBalance = true;\n        // Update balance and fee\n        this.currentBalance = await this.getBalance();\n        this.currentAuctionTotal = await this.getAuctionTotal();\n        this.UserTotal = await this.getUserTotal();\n        this.NextDayTime = await this.getNextDayTime();\n        this.CLAIM_AMOUNT = await this.getAuctionTotalZKBTC();\n    } catch (e) {\n        alert(JSON.stringify(e));\n    }\n\n    this.txStatus = 0;\n    this.retreivingFee = false;\n    this.retreivingBalance = false;\n},\n\n\n    async RemovePortionOfStake() {\n      const userAddy = await this.getAddress()\nconsole.log(\"222212\", userAddy );\n    this.txStatus = 1;\n    try {\n  var  amountToStake =  (parseFloat(this.sliderValue)).toString();\nif(this.sliderValue<=(this.greetingStakeBalance/1e18 * 99/100)){\n  console.log(\"BIGGIERRRRR\");\n          amountToStake = (parseFloat((this.sliderValue)).toFixed(18)).toString();\n        \n\nvar bigNumber = BigNumber.from(utils.parseUnits(amountToStake, 18));\n\n        console.log(\"BIGNUM\", bigNumber)\n        var txHandle = await this.contractABASStaking.withdraw(bigNumber);        \n        \n        this.txStatus = 2;\n        await txHandle.wait();\n\nawait txHandle.wait();\n}else{\n        var txHandle2 = await this.contractABASStaking.exit();\n        \n        this.txStatus = 2;\n        await txHandle2.wait();\n\n}\n\n        // Wait until the transaction is committed\n        this.txStatus = 3;\n\n        // Update greeting\n        this.greeting = await this.getGreeting();\n\n        this.greetingStakeBalance = await this.getGreetingStakeBalance();\n        this.greetingStakeBalanceTotal = await this.getGreetingStakeBalanceTotal();\n        this.sliderValue = parseInt(this.greetingStakeBalance)/1e18;\n\tthis.MaxsliderValue = parseInt(this.greetingStakeBalance);\n        this.StakeReward = await this.getStakeReward();\n        this.StakeReward2 = await this.getStakeReward2();\n        this.StakeReward3 = await this.getStakeReward3();\n        this.retreivingFee = true;\n        this.LPBalance = await this.getLPBalance();\n\tthis.MaxsliderValue2 = parseInt(this.LPBalance);\n        this.ApprovedLPforContract = await this.getApprovedLPforContract();\n        this.retreivingBalance = true;\n        // Update balance and fee\n        this.currentBalance = await this.getBalance();\n        this.currentAuctionTotal = await this.getAuctionTotal();\n        this.UserTotal = await this.getUserTotal();\n        this.NextDayTime = await this.getNextDayTime();\n        this.CLAIM_AMOUNT = await this.getAuctionTotalZKBTC();\n    } catch (e) {\n        alert(JSON.stringify(e));\n    }\n\n    this.txStatus = 0;\n    this.retreivingFee = false;\n    this.retreivingBalance = false;\n},\n\n\n\n\n\n    async ExitOnly() {\n      const userAddy = await this.getAddress()\nconsole.log(\"222212\", userAddy );\n    this.txStatus = 1;\n    try {\n        const txHandle = await this.contractABASStaking.exit();\n\n        this.txStatus = 2;\n\n        // Wait until the transaction is committed\n        await txHandle.wait();\n        this.txStatus = 3;\n\n        // Update greeting\n        this.greeting = await this.getGreeting();\n\n        this.greetingStakeBalance = await this.getGreetingStakeBalance();\n        this.greetingStakeBalanceTotal = await this.getGreetingStakeBalanceTotal();\n        this.StakeReward = await this.getStakeReward();\n        this.StakeReward2 = await this.getStakeReward2();\n        this.StakeReward3 = await this.getStakeReward3();\n        this.retreivingFee = true;\n        this.LPBalance = await this.getLPBalance();\n        this.ApprovedLPforContract = await this.getApprovedLPforContract();\n        this.retreivingBalance = true;\n        // Update balance and fee\n        this.currentBalance = await this.getBalance();\n        this.currentAuctionTotal = await this.getAuctionTotal();\n        this.UserTotal = await this.getUserTotal();\n        this.NextDayTime = await this.getNextDayTime();\n        this.CLAIM_AMOUNT = await this.getAuctionTotalZKBTC();\n    } catch (e) {\n        alert(JSON.stringify(e));\n    }\n\n    this.txStatus = 0;\n    this.retreivingFee = false;\n    this.retreivingBalance = false;\n},\n\n\n\n    async initilizeABAS() {\n    this.txStatus = 1;\n    try {\n      \n        const txHandle = await this.contractABAS.zinit2(AUCTION_CONTRACT_ADDRESS, Staking_zkBTC_CONTRACT_ADDRESS, LP_SECOND_STAKING_CONTRACT_ADDRESS);\n\n        this.txStatus = 2;\n\n        // Wait until the transaction is committed\n        await txHandle.wait();\n        this.txStatus = 3;\n\n        // Update greeting\n        this.greeting = await this.getGreeting();\n        // Update greeting\n        this.greetingStakeBalance = await this.getGreetingStakeBalance();\n        this.greetingStakeBalanceTotal = await this.getGreetingStakeBalanceTotal();\n        this.StakeReward = await this.getStakeReward();\n        this.StakeReward2 = await this.getStakeReward2();\n        this.StakeReward3 = await this.getStakeReward3();\n\n        this.LPBalance = await this.getLPBalance();\n        this.ApprovedLPforContract = await this.getApprovedLPforContract();\n        this.retreivingFee = true;\n        this.retreivingBalance = true;\n        // Update balance and fee\n        this.currentBalance = await this.getBalance();\n    } catch (e) {\n        alert(JSON.stringify(e));\n    }\n\n    this.txStatus = 0;\n    this.retreivingFee = false;\n    this.retreivingBalance = false;\n},\n\n\n\n    updateFee() {\n      this.retreivingFee = true;\n      this.getFee()\n        .then((fee) => {\n          this.currentFee = fee;\n        })\n        .catch((e) => console.log(e))\n        .finally(() => {\n          this.retreivingFee = false;\n        });\n    },\n    updateBalance() {\n      this.retreivingBalance = true;\n      this.getBalance()\n        .then((balance) => {\n          this.currentBalance = balance;\n        })\n        .catch((e) => console.log(e))\n        .finally(() => {\n          this.retreivingBalance = false;\n        });\n    },\n    changeToken() {\n      this.retreivingFee = true;\n      this.retreivingBalance = true;\n      const l1Token = this.tokens.filter(\n        (t) => t.address == this.selectedTokenAddress\n      )[0];\n      this.provider\n        .l2TokenAddress(l1Token.address)\n        .then((l2Address) => {\n          this.selectedToken = {\n            l1Address: l1Token.address,\n            l2Address: l2Address,\n            decimals: l1Token.decimals,\n            symbol: l1Token.symbol,\n          };\n          this.updateFee();\n          this.updateBalance();\n        })\n        .catch((e) => console.log(e))\n        .finally(() => {\n          this.retreivingFee = false;\n          this.retreivingBalance = false;\n        });\n    },\n    async changeTokenETH() {\n      this.currentAuctionTotal = await this.getAuctionTotal();\n      this.retreivingFee = true;\n      this.retreivingBalance = true;\n      this.provider\n        .l2TokenAddress(\"0x0000000000000000000000000000000000000000\")\n        .then((l2Address) => {\n          this.selectedToken = {\n            l1Address: \"0x0000000000000000000000000000000000000000\",\n            l2Address: l2Address,\n            decimals: 18  ,\n            symbol: \"ETH\",\n          };\n          this.updateFee();\n          this.updateBalance();\n        })\n        .catch((e) => console.log(e))\n        .finally(() => {\n          this.retreivingFee = false;\n          this.retreivingBalance = false;\n        });\n    },\n    loadMainScreen() {\n      this.initializeProviderAndSigner();\n\n      if (!this.provider || !this.signer) {\n        alert(\"Follow the tutorial to learn how to connect to Metamask!\");\n        return;\n      }\n\n      this.getDifficulty().then((difficulty) => {\n        this.difficulty  = difficulty;\n        this.mainLoading2 = false;\n      });\n\n      this.getGreetingAuctionNumber().then((greetingAuctionNumber) => {\n        this.greetingAuctionNumber = greetingAuctionNumber;\n\tthis.StartingDay = greetingAuctionNumber;\n        this.mainLoading2 = false;\n      });\n\n      this.getGreetingAuctionLength().then((AuctionLengthInHours) => {\n        this.AuctionLengthInHours = AuctionLengthInHours;\n        this.mainLoading2 = false;\n      });\n      this.getGreetingAuctionERA().then((currentEra) => {\n        this.currentEra = currentEra;\n\tthis.era = currentEra;\n        this.mainLoading2 = false;\n      });\n\n      this.getAuctionTotal().then((currentAuctionTotal) => {\n        this.currentAuctionTotal = currentAuctionTotal;\n        this.mainLoading2 = false;\n      });\n\n      this.getNextDayTime().then((NextDayTime) => {\n        this.NextDayTime = NextDayTime;\n        this.mainLoading2 = false;\n      });\n\n      this.UpdateContracts().then((NextDayTime) => {\n        this.NextDayTime = NextDayTime;\n        this.mainLoading2 = false;\n      });\n\n      this.getUserTotal().then((UserTotal) => {\n        this.UserTotal = UserTotal;\n        this.mainLoading2 = false;\n      });\n\n      this.getAuctionTotalZKBTC().then((CLAIM_AMOUNT) => {\n        this.CLAIM_AMOUNT = CLAIM_AMOUNT;\n        this.mainLoading2 = false;\n      });\n\n      \n      this.getGreeting().then((greeting) => {\n        this.greeting = greeting;\n        this.mainLoading = false;\n      });\n\n      this.getGreetingStakeBalance().then((greetingStakeBalance) => {\n        this.greetingStakeBalance = greetingStakeBalance;\n        this.MaxsliderValue=greetingStakeBalance;\n        this.mainLoading = false;\n      });\n\n      this.getGreetingDaysToWithdrawArray().then((GreetingDaysToWithdrawArray) => {\n        this.GreetingDaysToWithdrawArray = GreetingDaysToWithdrawArray;\n        this.mainLoading = false;\n      });\n\n      this.getLPBalance().then((LPBalance) => {\n        this.LPBalance = LPBalance;\n        this.MaxsliderValue2=LPBalance;\n        this.mainLoading = false;\n      });\n      this.getApprovedLPforContract().then((ApprovedLPforContract) => {\n        this.ApprovedLPforContract = ApprovedLPforContract;\n\n        this.mainLoading = false;\n      });\n      this.getGreetingStakeBalanceTotal().then((greetingStakeBalanceTotal) => {\n        this.greetingStakeBalanceTotal = greetingStakeBalanceTotal;\n        this.mainLoading = false;\n      });\n      this.getGreetingLPTotal().then((greetingLPTotal) => {\n        this.greetingLPTotal = greetingLPTotal;\n        this.mainLoading = false;\n      });\n      this.getReservesTotal().then((ReservesTotal) => {\n        this.ReservesTotal = ReservesTotal[0];\n        this.ReservesTotal2 = ReservesTotal[1];\n        this.mainLoading = false;\n      });\n\n      this.getStakeReward().then((StakeReward) => {\n        this.StakeReward = StakeReward;\n        this.mainLoading = false;\n      });\n\n      this.getStakeReward2().then((StakeReward2) => {\n        this.StakeReward2 = StakeReward2;\n        this.mainLoading = false;\n      });\n\n      this.getStakeReward3().then((StakeReward3) => {\n        this.StakeReward3 = StakeReward3;\n        this.mainLoading = false;\n      });\n\n      this.getStakeNextRewardTime().then((StakingNewPeriod) => {\n        this.StakingNewPeriod = StakingNewPeriod;\n        this.mainLoading = false;\n      });\n\n\n\tthis.ONEloadMainScreen22();\n\n\n  const interval = 10000; // 10 seconds\n\n     if(this.runningNow == false){\n          this.loopId = setInterval(this.ONEloadMainScreen22, interval);\n\n\n}\n\n\n\n\n\n\n\n    },\n    connectMetamask() {\n      window.ethereum\n        .request({ method: \"eth_requestAccounts\" })\n        .then(() => {\n        //  if (+window.ethereum.networkVersion == 280 || +window.ethereum.networkVersion == 324 ) {\n            if (+window.ethereum.networkVersion == 280 ) {\n            this.loadMainScreen();\n          } else {\n            alert(\"Please switch network to zkSync Testnet!\");\n          }\n        })\n        .catch((e) => console.log(e));\n    },\n  },\n};\n</script>\n\n<style>\n\n.ethereum-address-input {\n  /* Style specific to the Ethereum address input */\n  width: 90%; /* Adjust the width as needed */\n  max-width: 500px;\n  padding: 10px;\n  font-size: 60%;\n  border: 1px solid #ccc;\n  border-radius: 6px;\n  box-sizing: border-box;\n}\n@media screen and (min-width: 768px) {\n  .ethereum-address-input {\n    font-size: 18px; /* Adjust the font size for larger screens */\n  }\n}\n.form-control {\n  width: 45%;\n  padding: 3px; /* Optional: Add padding for better visual appearance */\n  font-size: 100%; /* Adjust the width to your preference */\n}\n.larger-input {\n  width: 80px; /* Adjust the width to your preference */\n  padding: 10px; /* Add padding for better visual appearance */\n  font-size: 16px; /* Optional: Adjust the font size */\n}\n.my-button {\n  font-size: 20px;\n  padding: 10px 20px;\n}\n\n.my-button5 {\n  white-space: nowrap;\n \n  font-size: 20px;\n  padding: 10px 20px;\n}\n\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 30px;\n}\n\n#app ul {\n  display: inline-block;\n}\n\n.main-box {\n  text-align: left;\n  width: 400px;\n\n  margin: auto;\n  margin-top: 40px;\n}\n\n.greeting-input {\n  margin-top: 20px;\n}\n\n.change-button {\n  margin-left: 20px;\n}\n\n.start-screen {\n  margin-top: 100px;\n}\n\n.balance {\n  margin-top: 10px;\n}\n\n.refresh-button {\n  margin-left: 15px;\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=3230395a\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=3230395a&prod&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Header.vue?vue&type=style&index=0&id=6c297f01&prod&scoped=true&lang=css\"","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&id=3230395a&prod&lang=css\""],"sourceRoot":""}